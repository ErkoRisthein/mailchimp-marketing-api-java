/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Trigger settings for the Automation.
 */
@JsonPropertyOrder({
  AutomationTrigger1.JSON_PROPERTY_WORKFLOW_TYPE
})
@JsonTypeName("Automation_Trigger_1")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class AutomationTrigger1 {
  public static final String JSON_PROPERTY_WORKFLOW_TYPE = "workflow_type";
  private String workflowType;

  public AutomationTrigger1() {
  }

  public AutomationTrigger1 workflowType(String workflowType) {
    
    this.workflowType = workflowType;
    return this;
  }

   /**
   * The type of Automation workflow. Currently only supports &#39;abandonedCart&#39;.
   * @return workflowType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORKFLOW_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getWorkflowType() {
    return workflowType;
  }


  @JsonProperty(JSON_PROPERTY_WORKFLOW_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkflowType(String workflowType) {
    this.workflowType = workflowType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationTrigger1 automationTrigger1 = (AutomationTrigger1) o;
    return Objects.equals(this.workflowType, automationTrigger1.workflowType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workflowType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationTrigger1 {\n");
    sb.append("    workflowType: ").append(toIndentedString(workflowType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

