/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.AutomationCampaignSettings;
import io.github.erkoristhein.mailchimp.marketing.model.AutomationTrackingOptions;
import io.github.erkoristhein.mailchimp.marketing.model.AutomationTrigger;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignReportSummary;
import io.github.erkoristhein.mailchimp.marketing.model.ModelList;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A summary of an individual Automation workflow&#39;s settings and content.
 */
@JsonPropertyOrder({
  AutomationWorkflow.JSON_PROPERTY_ID,
  AutomationWorkflow.JSON_PROPERTY_CREATE_TIME,
  AutomationWorkflow.JSON_PROPERTY_START_TIME,
  AutomationWorkflow.JSON_PROPERTY_STATUS,
  AutomationWorkflow.JSON_PROPERTY_EMAILS_SENT,
  AutomationWorkflow.JSON_PROPERTY_RECIPIENTS,
  AutomationWorkflow.JSON_PROPERTY_SETTINGS,
  AutomationWorkflow.JSON_PROPERTY_TRACKING,
  AutomationWorkflow.JSON_PROPERTY_TRIGGER_SETTINGS,
  AutomationWorkflow.JSON_PROPERTY_REPORT_SUMMARY,
  AutomationWorkflow.JSON_PROPERTY_LINKS
})
@JsonTypeName("Automation_Workflow")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class AutomationWorkflow {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATE_TIME = "create_time";
  private OffsetDateTime createTime;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  private OffsetDateTime startTime;

  /**
   * The current status of the Automation.
   */
  public enum StatusEnum {
    SAVE("save"),
    
    PAUSED("paused"),
    
    SENDING("sending");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_EMAILS_SENT = "emails_sent";
  private Integer emailsSent;

  public static final String JSON_PROPERTY_RECIPIENTS = "recipients";
  private ModelList recipients;

  public static final String JSON_PROPERTY_SETTINGS = "settings";
  private AutomationCampaignSettings settings;

  public static final String JSON_PROPERTY_TRACKING = "tracking";
  private AutomationTrackingOptions tracking;

  public static final String JSON_PROPERTY_TRIGGER_SETTINGS = "trigger_settings";
  private AutomationTrigger triggerSettings;

  public static final String JSON_PROPERTY_REPORT_SUMMARY = "report_summary";
  private CampaignReportSummary reportSummary;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links = new ArrayList<>();

  public AutomationWorkflow() {
  }

  @JsonCreator
  public AutomationWorkflow(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_CREATE_TIME) OffsetDateTime createTime, 
    @JsonProperty(JSON_PROPERTY_START_TIME) OffsetDateTime startTime, 
    @JsonProperty(JSON_PROPERTY_STATUS) StatusEnum status, 
    @JsonProperty(JSON_PROPERTY_EMAILS_SENT) Integer emailsSent, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.createTime = createTime;
    this.startTime = startTime;
    this.status = status;
    this.emailsSent = emailsSent;
    this.links = links;
  }

   /**
   * A string that identifies the Automation.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




   /**
   * The date and time the Automation was created in ISO 8601 format.
   * @return createTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreateTime() {
    return createTime;
  }




   /**
   * The date and time the Automation was started in ISO 8601 format.
   * @return startTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartTime() {
    return startTime;
  }




   /**
   * The current status of the Automation.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }




   /**
   * The total number of emails sent for the Automation.
   * @return emailsSent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAILS_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEmailsSent() {
    return emailsSent;
  }




  public AutomationWorkflow recipients(ModelList recipients) {
    
    this.recipients = recipients;
    return this;
  }

   /**
   * Get recipients
   * @return recipients
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModelList getRecipients() {
    return recipients;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipients(ModelList recipients) {
    this.recipients = recipients;
  }


  public AutomationWorkflow settings(AutomationCampaignSettings settings) {
    
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutomationCampaignSettings getSettings() {
    return settings;
  }


  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettings(AutomationCampaignSettings settings) {
    this.settings = settings;
  }


  public AutomationWorkflow tracking(AutomationTrackingOptions tracking) {
    
    this.tracking = tracking;
    return this;
  }

   /**
   * Get tracking
   * @return tracking
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutomationTrackingOptions getTracking() {
    return tracking;
  }


  @JsonProperty(JSON_PROPERTY_TRACKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTracking(AutomationTrackingOptions tracking) {
    this.tracking = tracking;
  }


  public AutomationWorkflow triggerSettings(AutomationTrigger triggerSettings) {
    
    this.triggerSettings = triggerSettings;
    return this;
  }

   /**
   * Get triggerSettings
   * @return triggerSettings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRIGGER_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutomationTrigger getTriggerSettings() {
    return triggerSettings;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGER_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggerSettings(AutomationTrigger triggerSettings) {
    this.triggerSettings = triggerSettings;
  }


  public AutomationWorkflow reportSummary(CampaignReportSummary reportSummary) {
    
    this.reportSummary = reportSummary;
    return this;
  }

   /**
   * Get reportSummary
   * @return reportSummary
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CampaignReportSummary getReportSummary() {
    return reportSummary;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportSummary(CampaignReportSummary reportSummary) {
    this.reportSummary = reportSummary;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationWorkflow automationWorkflow = (AutomationWorkflow) o;
    return Objects.equals(this.id, automationWorkflow.id) &&
        Objects.equals(this.createTime, automationWorkflow.createTime) &&
        Objects.equals(this.startTime, automationWorkflow.startTime) &&
        Objects.equals(this.status, automationWorkflow.status) &&
        Objects.equals(this.emailsSent, automationWorkflow.emailsSent) &&
        Objects.equals(this.recipients, automationWorkflow.recipients) &&
        Objects.equals(this.settings, automationWorkflow.settings) &&
        Objects.equals(this.tracking, automationWorkflow.tracking) &&
        Objects.equals(this.triggerSettings, automationWorkflow.triggerSettings) &&
        Objects.equals(this.reportSummary, automationWorkflow.reportSummary) &&
        Objects.equals(this.links, automationWorkflow.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createTime, startTime, status, emailsSent, recipients, settings, tracking, triggerSettings, reportSummary, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationWorkflow {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    emailsSent: ").append(toIndentedString(emailsSent)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    tracking: ").append(toIndentedString(tracking)).append("\n");
    sb.append("    triggerSettings: ").append(toIndentedString(triggerSettings)).append("\n");
    sb.append("    reportSummary: ").append(toIndentedString(reportSummary)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

