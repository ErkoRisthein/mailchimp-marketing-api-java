/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner
 */
@JsonPropertyOrder({
  GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner.JSON_PROPERTY_DATE,
  GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner.JSON_PROPERTY_IMPRESSIONS
})
@JsonTypeName("getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity_impressions_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner {
  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_IMPRESSIONS = "impressions";
  private Integer impressions;

  public GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner() {
  }

  public GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(String date) {
    this.date = date;
  }


  public GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner impressions(Integer impressions) {
    
    this.impressions = impressions;
    return this;
  }

   /**
   * Get impressions
   * @return impressions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPRESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getImpressions() {
    return impressions;
  }


  @JsonProperty(JSON_PROPERTY_IMPRESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImpressions(Integer impressions) {
    this.impressions = impressions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner getReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner = (GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner) o;
    return Objects.equals(this.date, getReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner.date) &&
        Objects.equals(this.impressions, getReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner.impressions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, impressions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivityImpressionsInner {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    impressions: ").append(toIndentedString(impressions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

