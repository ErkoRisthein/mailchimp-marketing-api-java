/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Extra options for some merge field types.
 */
@JsonPropertyOrder({
  MergeFieldOptions2.JSON_PROPERTY_DEFAULT_COUNTRY,
  MergeFieldOptions2.JSON_PROPERTY_PHONE_FORMAT,
  MergeFieldOptions2.JSON_PROPERTY_DATE_FORMAT,
  MergeFieldOptions2.JSON_PROPERTY_CHOICES
})
@JsonTypeName("Merge_Field_Options_2")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class MergeFieldOptions2 {
  public static final String JSON_PROPERTY_DEFAULT_COUNTRY = "default_country";
  private Integer defaultCountry;

  public static final String JSON_PROPERTY_PHONE_FORMAT = "phone_format";
  private String phoneFormat;

  public static final String JSON_PROPERTY_DATE_FORMAT = "date_format";
  private String dateFormat;

  public static final String JSON_PROPERTY_CHOICES = "choices";
  private List<String> choices = new ArrayList<>();

  public MergeFieldOptions2() {
  }

  public MergeFieldOptions2 defaultCountry(Integer defaultCountry) {
    
    this.defaultCountry = defaultCountry;
    return this;
  }

   /**
   * In an address field, the default country code if none supplied.
   * @return defaultCountry
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDefaultCountry() {
    return defaultCountry;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultCountry(Integer defaultCountry) {
    this.defaultCountry = defaultCountry;
  }


  public MergeFieldOptions2 phoneFormat(String phoneFormat) {
    
    this.phoneFormat = phoneFormat;
    return this;
  }

   /**
   * In a phone field, the phone number type: US or International.
   * @return phoneFormat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneFormat() {
    return phoneFormat;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneFormat(String phoneFormat) {
    this.phoneFormat = phoneFormat;
  }


  public MergeFieldOptions2 dateFormat(String dateFormat) {
    
    this.dateFormat = dateFormat;
    return this;
  }

   /**
   * In a date or birthday field, the format of the date.
   * @return dateFormat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDateFormat() {
    return dateFormat;
  }


  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
  }


  public MergeFieldOptions2 choices(List<String> choices) {
    
    this.choices = choices;
    return this;
  }

  public MergeFieldOptions2 addChoicesItem(String choicesItem) {
    if (this.choices == null) {
      this.choices = new ArrayList<>();
    }
    this.choices.add(choicesItem);
    return this;
  }

   /**
   * In a radio or dropdown non-group field, the available options for members to pick from.
   * @return choices
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHOICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getChoices() {
    return choices;
  }


  @JsonProperty(JSON_PROPERTY_CHOICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChoices(List<String> choices) {
    this.choices = choices;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MergeFieldOptions2 mergeFieldOptions2 = (MergeFieldOptions2) o;
    return Objects.equals(this.defaultCountry, mergeFieldOptions2.defaultCountry) &&
        Objects.equals(this.phoneFormat, mergeFieldOptions2.phoneFormat) &&
        Objects.equals(this.dateFormat, mergeFieldOptions2.dateFormat) &&
        Objects.equals(this.choices, mergeFieldOptions2.choices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultCountry, phoneFormat, dateFormat, choices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MergeFieldOptions2 {\n");
    sb.append("    defaultCountry: ").append(toIndentedString(defaultCountry)).append("\n");
    sb.append("    phoneFormat: ").append(toIndentedString(phoneFormat)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    choices: ").append(toIndentedString(choices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

