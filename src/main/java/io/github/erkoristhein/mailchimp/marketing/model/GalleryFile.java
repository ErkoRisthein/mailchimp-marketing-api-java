/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An individual file listed in the File Manager.
 */
@JsonPropertyOrder({
  GalleryFile.JSON_PROPERTY_ID,
  GalleryFile.JSON_PROPERTY_FOLDER_ID,
  GalleryFile.JSON_PROPERTY_TYPE,
  GalleryFile.JSON_PROPERTY_NAME,
  GalleryFile.JSON_PROPERTY_FULL_SIZE_URL,
  GalleryFile.JSON_PROPERTY_THUMBNAIL_URL,
  GalleryFile.JSON_PROPERTY_SIZE,
  GalleryFile.JSON_PROPERTY_CREATED_AT,
  GalleryFile.JSON_PROPERTY_CREATED_BY,
  GalleryFile.JSON_PROPERTY_WIDTH,
  GalleryFile.JSON_PROPERTY_HEIGHT,
  GalleryFile.JSON_PROPERTY_LINKS
})
@JsonTypeName("Gallery_File")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class GalleryFile {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_FOLDER_ID = "folder_id";
  private Integer folderId;

  /**
   * The type of file in the File Manager.
   */
  public enum TypeEnum {
    IMAGE("image"),
    
    FILE("file");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_FULL_SIZE_URL = "full_size_url";
  private URI fullSizeUrl;

  public static final String JSON_PROPERTY_THUMBNAIL_URL = "thumbnail_url";
  private URI thumbnailUrl;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Integer size;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  private String createdBy;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private Integer width;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private Integer height;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links = new ArrayList<>();

  public GalleryFile() {
  }

  @JsonCreator
  public GalleryFile(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_TYPE) TypeEnum type, 
    @JsonProperty(JSON_PROPERTY_FULL_SIZE_URL) URI fullSizeUrl, 
    @JsonProperty(JSON_PROPERTY_THUMBNAIL_URL) URI thumbnailUrl, 
    @JsonProperty(JSON_PROPERTY_SIZE) Integer size, 
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_CREATED_BY) String createdBy, 
    @JsonProperty(JSON_PROPERTY_WIDTH) Integer width, 
    @JsonProperty(JSON_PROPERTY_HEIGHT) Integer height, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.type = type;
    this.fullSizeUrl = fullSizeUrl;
    this.thumbnailUrl = thumbnailUrl;
    this.size = size;
    this.createdAt = createdAt;
    this.createdBy = createdBy;
    this.width = width;
    this.height = height;
    this.links = links;
  }

   /**
   * The unique id of the file.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




  public GalleryFile folderId(Integer folderId) {
    
    this.folderId = folderId;
    return this;
  }

   /**
   * The id of the folder.
   * @return folderId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFolderId() {
    return folderId;
  }


  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFolderId(Integer folderId) {
    this.folderId = folderId;
  }


   /**
   * The type of file in the File Manager.
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }




  public GalleryFile name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the file.
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


   /**
   * The url of the full-size file.
   * @return fullSizeUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_SIZE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getFullSizeUrl() {
    return fullSizeUrl;
  }




   /**
   * The url of the thumbnail preview.
   * @return thumbnailUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THUMBNAIL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getThumbnailUrl() {
    return thumbnailUrl;
  }




   /**
   * The size of the file in bytes.
   * @return size
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSize() {
    return size;
  }




   /**
   * The date and time a file was added to the File Manager in ISO 8601 format.
   * @return createdAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * The username of the profile that uploaded the file.
   * @return createdBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedBy() {
    return createdBy;
  }




   /**
   * The width of the image.
   * @return width
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWidth() {
    return width;
  }




   /**
   * The height of an image.
   * @return height
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHeight() {
    return height;
  }




   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GalleryFile galleryFile = (GalleryFile) o;
    return Objects.equals(this.id, galleryFile.id) &&
        Objects.equals(this.folderId, galleryFile.folderId) &&
        Objects.equals(this.type, galleryFile.type) &&
        Objects.equals(this.name, galleryFile.name) &&
        Objects.equals(this.fullSizeUrl, galleryFile.fullSizeUrl) &&
        Objects.equals(this.thumbnailUrl, galleryFile.thumbnailUrl) &&
        Objects.equals(this.size, galleryFile.size) &&
        Objects.equals(this.createdAt, galleryFile.createdAt) &&
        Objects.equals(this.createdBy, galleryFile.createdBy) &&
        Objects.equals(this.width, galleryFile.width) &&
        Objects.equals(this.height, galleryFile.height) &&
        Objects.equals(this.links, galleryFile.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, folderId, type, name, fullSizeUrl, thumbnailUrl, size, createdAt, createdBy, width, height, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GalleryFile {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fullSizeUrl: ").append(toIndentedString(fullSizeUrl)).append("\n");
    sb.append("    thumbnailUrl: ").append(toIndentedString(thumbnailUrl)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

