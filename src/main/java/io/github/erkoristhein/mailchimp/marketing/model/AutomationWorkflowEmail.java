/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.AutomationDelay;
import io.github.erkoristhein.mailchimp.marketing.model.AutomationTrigger;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignReportSummary1;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignSettings;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignSocialCard;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignTrackingOptions;
import io.github.erkoristhein.mailchimp.marketing.model.List2;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A summary of an individual Automation workflow email.
 */
@JsonPropertyOrder({
  AutomationWorkflowEmail.JSON_PROPERTY_ID,
  AutomationWorkflowEmail.JSON_PROPERTY_WEB_ID,
  AutomationWorkflowEmail.JSON_PROPERTY_WORKFLOW_ID,
  AutomationWorkflowEmail.JSON_PROPERTY_POSITION,
  AutomationWorkflowEmail.JSON_PROPERTY_DELAY,
  AutomationWorkflowEmail.JSON_PROPERTY_CREATE_TIME,
  AutomationWorkflowEmail.JSON_PROPERTY_START_TIME,
  AutomationWorkflowEmail.JSON_PROPERTY_ARCHIVE_URL,
  AutomationWorkflowEmail.JSON_PROPERTY_STATUS,
  AutomationWorkflowEmail.JSON_PROPERTY_EMAILS_SENT,
  AutomationWorkflowEmail.JSON_PROPERTY_SEND_TIME,
  AutomationWorkflowEmail.JSON_PROPERTY_CONTENT_TYPE,
  AutomationWorkflowEmail.JSON_PROPERTY_NEEDS_BLOCK_REFRESH,
  AutomationWorkflowEmail.JSON_PROPERTY_HAS_LOGO_MERGE_TAG,
  AutomationWorkflowEmail.JSON_PROPERTY_RECIPIENTS,
  AutomationWorkflowEmail.JSON_PROPERTY_SETTINGS,
  AutomationWorkflowEmail.JSON_PROPERTY_TRACKING,
  AutomationWorkflowEmail.JSON_PROPERTY_SOCIAL_CARD,
  AutomationWorkflowEmail.JSON_PROPERTY_TRIGGER_SETTINGS,
  AutomationWorkflowEmail.JSON_PROPERTY_REPORT_SUMMARY,
  AutomationWorkflowEmail.JSON_PROPERTY_LINKS
})
@JsonTypeName("Automation_Workflow_Email")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class AutomationWorkflowEmail {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_WEB_ID = "web_id";
  private Integer webId;

  public static final String JSON_PROPERTY_WORKFLOW_ID = "workflow_id";
  private String workflowId;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Integer position;

  public static final String JSON_PROPERTY_DELAY = "delay";
  private AutomationDelay delay;

  public static final String JSON_PROPERTY_CREATE_TIME = "create_time";
  private OffsetDateTime createTime;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_ARCHIVE_URL = "archive_url";
  private String archiveUrl;

  /**
   * The current status of the campaign.
   */
  public enum StatusEnum {
    SAVE("save"),
    
    PAUSED("paused"),
    
    SENDING("sending");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_EMAILS_SENT = "emails_sent";
  private Integer emailsSent;

  public static final String JSON_PROPERTY_SEND_TIME = "send_time";
  private OffsetDateTime sendTime;

  public static final String JSON_PROPERTY_CONTENT_TYPE = "content_type";
  private String contentType;

  public static final String JSON_PROPERTY_NEEDS_BLOCK_REFRESH = "needs_block_refresh";
  private Boolean needsBlockRefresh;

  public static final String JSON_PROPERTY_HAS_LOGO_MERGE_TAG = "has_logo_merge_tag";
  private Boolean hasLogoMergeTag;

  public static final String JSON_PROPERTY_RECIPIENTS = "recipients";
  private List2 recipients;

  public static final String JSON_PROPERTY_SETTINGS = "settings";
  private CampaignSettings settings;

  public static final String JSON_PROPERTY_TRACKING = "tracking";
  private CampaignTrackingOptions tracking;

  public static final String JSON_PROPERTY_SOCIAL_CARD = "social_card";
  private CampaignSocialCard socialCard;

  public static final String JSON_PROPERTY_TRIGGER_SETTINGS = "trigger_settings";
  private AutomationTrigger triggerSettings;

  public static final String JSON_PROPERTY_REPORT_SUMMARY = "report_summary";
  private CampaignReportSummary1 reportSummary;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links;

  public AutomationWorkflowEmail() {
  }

  @JsonCreator
  public AutomationWorkflowEmail(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_WEB_ID) Integer webId, 
    @JsonProperty(JSON_PROPERTY_WORKFLOW_ID) String workflowId, 
    @JsonProperty(JSON_PROPERTY_POSITION) Integer position, 
    @JsonProperty(JSON_PROPERTY_CREATE_TIME) OffsetDateTime createTime, 
    @JsonProperty(JSON_PROPERTY_START_TIME) OffsetDateTime startTime, 
    @JsonProperty(JSON_PROPERTY_ARCHIVE_URL) String archiveUrl, 
    @JsonProperty(JSON_PROPERTY_STATUS) StatusEnum status, 
    @JsonProperty(JSON_PROPERTY_EMAILS_SENT) Integer emailsSent, 
    @JsonProperty(JSON_PROPERTY_SEND_TIME) OffsetDateTime sendTime, 
    @JsonProperty(JSON_PROPERTY_CONTENT_TYPE) String contentType, 
    @JsonProperty(JSON_PROPERTY_NEEDS_BLOCK_REFRESH) Boolean needsBlockRefresh, 
    @JsonProperty(JSON_PROPERTY_HAS_LOGO_MERGE_TAG) Boolean hasLogoMergeTag, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.webId = webId;
    this.workflowId = workflowId;
    this.position = position;
    this.createTime = createTime;
    this.startTime = startTime;
    this.archiveUrl = archiveUrl;
    this.status = status;
    this.emailsSent = emailsSent;
    this.sendTime = sendTime;
    this.contentType = contentType;
    this.needsBlockRefresh = needsBlockRefresh;
    this.hasLogoMergeTag = hasLogoMergeTag;
    this.links = links;
  }

   /**
   * A string that uniquely identifies the Automation email.
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




   /**
   * The ID used in the Mailchimp web application. View this automation in your Mailchimp account at &#x60;https://{dc}.admin.mailchimp.com/campaigns/show/?id&#x3D;{web_id}&#x60;.
   * @return webId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWebId() {
    return webId;
  }




   /**
   * A string that uniquely identifies an Automation workflow.
   * @return workflowId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKFLOW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorkflowId() {
    return workflowId;
  }




   /**
   * The position of an Automation email in a workflow.
   * @return position
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPosition() {
    return position;
  }




  public AutomationWorkflowEmail delay(AutomationDelay delay) {
    
    this.delay = delay;
    return this;
  }

   /**
   * Get delay
   * @return delay
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutomationDelay getDelay() {
    return delay;
  }


  @JsonProperty(JSON_PROPERTY_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDelay(AutomationDelay delay) {
    this.delay = delay;
  }


   /**
   * The date and time the campaign was created in ISO 8601 format.
   * @return createTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreateTime() {
    return createTime;
  }




   /**
   * The date and time the campaign was started in ISO 8601 format.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartTime() {
    return startTime;
  }




   /**
   * The link to the campaign&#39;s archive version in ISO 8601 format.
   * @return archiveUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getArchiveUrl() {
    return archiveUrl;
  }




   /**
   * The current status of the campaign.
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }




   /**
   * The total number of emails sent for this campaign.
   * @return emailsSent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAILS_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEmailsSent() {
    return emailsSent;
  }




   /**
   *  The date and time a campaign was sent in ISO 8601 format
   * @return sendTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSendTime() {
    return sendTime;
  }




   /**
   * How the campaign&#39;s content is put together (&#39;template&#39;, &#39;drag_and_drop&#39;, &#39;html&#39;, &#39;url&#39;).
   * @return contentType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContentType() {
    return contentType;
  }




   /**
   * Determines if the automation email needs its blocks refreshed by opening the web-based campaign editor.
   * @return needsBlockRefresh
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEEDS_BLOCK_REFRESH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNeedsBlockRefresh() {
    return needsBlockRefresh;
  }




   /**
   * Determines if the campaign contains the *|BRAND:LOGO|* merge tag.
   * @return hasLogoMergeTag
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_LOGO_MERGE_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasLogoMergeTag() {
    return hasLogoMergeTag;
  }




  public AutomationWorkflowEmail recipients(List2 recipients) {
    
    this.recipients = recipients;
    return this;
  }

   /**
   * Get recipients
   * @return recipients
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List2 getRecipients() {
    return recipients;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipients(List2 recipients) {
    this.recipients = recipients;
  }


  public AutomationWorkflowEmail settings(CampaignSettings settings) {
    
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CampaignSettings getSettings() {
    return settings;
  }


  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettings(CampaignSettings settings) {
    this.settings = settings;
  }


  public AutomationWorkflowEmail tracking(CampaignTrackingOptions tracking) {
    
    this.tracking = tracking;
    return this;
  }

   /**
   * Get tracking
   * @return tracking
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CampaignTrackingOptions getTracking() {
    return tracking;
  }


  @JsonProperty(JSON_PROPERTY_TRACKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTracking(CampaignTrackingOptions tracking) {
    this.tracking = tracking;
  }


  public AutomationWorkflowEmail socialCard(CampaignSocialCard socialCard) {
    
    this.socialCard = socialCard;
    return this;
  }

   /**
   * Get socialCard
   * @return socialCard
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCIAL_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CampaignSocialCard getSocialCard() {
    return socialCard;
  }


  @JsonProperty(JSON_PROPERTY_SOCIAL_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocialCard(CampaignSocialCard socialCard) {
    this.socialCard = socialCard;
  }


  public AutomationWorkflowEmail triggerSettings(AutomationTrigger triggerSettings) {
    
    this.triggerSettings = triggerSettings;
    return this;
  }

   /**
   * Get triggerSettings
   * @return triggerSettings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRIGGER_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutomationTrigger getTriggerSettings() {
    return triggerSettings;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGER_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggerSettings(AutomationTrigger triggerSettings) {
    this.triggerSettings = triggerSettings;
  }


  public AutomationWorkflowEmail reportSummary(CampaignReportSummary1 reportSummary) {
    
    this.reportSummary = reportSummary;
    return this;
  }

   /**
   * Get reportSummary
   * @return reportSummary
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CampaignReportSummary1 getReportSummary() {
    return reportSummary;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportSummary(CampaignReportSummary1 reportSummary) {
    this.reportSummary = reportSummary;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationWorkflowEmail automationWorkflowEmail = (AutomationWorkflowEmail) o;
    return Objects.equals(this.id, automationWorkflowEmail.id) &&
        Objects.equals(this.webId, automationWorkflowEmail.webId) &&
        Objects.equals(this.workflowId, automationWorkflowEmail.workflowId) &&
        Objects.equals(this.position, automationWorkflowEmail.position) &&
        Objects.equals(this.delay, automationWorkflowEmail.delay) &&
        Objects.equals(this.createTime, automationWorkflowEmail.createTime) &&
        Objects.equals(this.startTime, automationWorkflowEmail.startTime) &&
        Objects.equals(this.archiveUrl, automationWorkflowEmail.archiveUrl) &&
        Objects.equals(this.status, automationWorkflowEmail.status) &&
        Objects.equals(this.emailsSent, automationWorkflowEmail.emailsSent) &&
        Objects.equals(this.sendTime, automationWorkflowEmail.sendTime) &&
        Objects.equals(this.contentType, automationWorkflowEmail.contentType) &&
        Objects.equals(this.needsBlockRefresh, automationWorkflowEmail.needsBlockRefresh) &&
        Objects.equals(this.hasLogoMergeTag, automationWorkflowEmail.hasLogoMergeTag) &&
        Objects.equals(this.recipients, automationWorkflowEmail.recipients) &&
        Objects.equals(this.settings, automationWorkflowEmail.settings) &&
        Objects.equals(this.tracking, automationWorkflowEmail.tracking) &&
        Objects.equals(this.socialCard, automationWorkflowEmail.socialCard) &&
        Objects.equals(this.triggerSettings, automationWorkflowEmail.triggerSettings) &&
        Objects.equals(this.reportSummary, automationWorkflowEmail.reportSummary) &&
        Objects.equals(this.links, automationWorkflowEmail.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, webId, workflowId, position, delay, createTime, startTime, archiveUrl, status, emailsSent, sendTime, contentType, needsBlockRefresh, hasLogoMergeTag, recipients, settings, tracking, socialCard, triggerSettings, reportSummary, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationWorkflowEmail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    webId: ").append(toIndentedString(webId)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    delay: ").append(toIndentedString(delay)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    archiveUrl: ").append(toIndentedString(archiveUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    emailsSent: ").append(toIndentedString(emailsSent)).append("\n");
    sb.append("    sendTime: ").append(toIndentedString(sendTime)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    needsBlockRefresh: ").append(toIndentedString(needsBlockRefresh)).append("\n");
    sb.append("    hasLogoMergeTag: ").append(toIndentedString(hasLogoMergeTag)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    tracking: ").append(toIndentedString(tracking)).append("\n");
    sb.append("    socialCard: ").append(toIndentedString(socialCard)).append("\n");
    sb.append("    triggerSettings: ").append(toIndentedString(triggerSettings)).append("\n");
    sb.append("    reportSummary: ").append(toIndentedString(reportSummary)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

