/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ReportSummaryEcommerce;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * High level reporting stats for an outreach.
 */
@JsonPropertyOrder({
  ReportSummary.JSON_PROPERTY_OPENS,
  ReportSummary.JSON_PROPERTY_UNIQUE_OPENS,
  ReportSummary.JSON_PROPERTY_OPEN_RATE,
  ReportSummary.JSON_PROPERTY_CLICKS,
  ReportSummary.JSON_PROPERTY_SUBSCRIBER_CLICKS,
  ReportSummary.JSON_PROPERTY_CLICK_RATE,
  ReportSummary.JSON_PROPERTY_VISITS,
  ReportSummary.JSON_PROPERTY_UNIQUE_VISITS,
  ReportSummary.JSON_PROPERTY_CONVERSION_RATE,
  ReportSummary.JSON_PROPERTY_SUBSCRIBES,
  ReportSummary.JSON_PROPERTY_ECOMMERCE,
  ReportSummary.JSON_PROPERTY_IMPRESSIONS,
  ReportSummary.JSON_PROPERTY_REACH,
  ReportSummary.JSON_PROPERTY_ENGAGEMENTS,
  ReportSummary.JSON_PROPERTY_TOTAL_SENT
})
@JsonTypeName("Report_Summary")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class ReportSummary {
  public static final String JSON_PROPERTY_OPENS = "opens";
  private Integer opens;

  public static final String JSON_PROPERTY_UNIQUE_OPENS = "unique_opens";
  private Integer uniqueOpens;

  public static final String JSON_PROPERTY_OPEN_RATE = "open_rate";
  private BigDecimal openRate;

  public static final String JSON_PROPERTY_CLICKS = "clicks";
  private Integer clicks;

  public static final String JSON_PROPERTY_SUBSCRIBER_CLICKS = "subscriber_clicks";
  private Integer subscriberClicks;

  public static final String JSON_PROPERTY_CLICK_RATE = "click_rate";
  private BigDecimal clickRate;

  public static final String JSON_PROPERTY_VISITS = "visits";
  private Integer visits;

  public static final String JSON_PROPERTY_UNIQUE_VISITS = "unique_visits";
  private Integer uniqueVisits;

  public static final String JSON_PROPERTY_CONVERSION_RATE = "conversion_rate";
  private BigDecimal conversionRate;

  public static final String JSON_PROPERTY_SUBSCRIBES = "subscribes";
  private Integer subscribes;

  public static final String JSON_PROPERTY_ECOMMERCE = "ecommerce";
  private ReportSummaryEcommerce ecommerce;

  public static final String JSON_PROPERTY_IMPRESSIONS = "impressions";
  private BigDecimal impressions;

  public static final String JSON_PROPERTY_REACH = "reach";
  private Integer reach;

  public static final String JSON_PROPERTY_ENGAGEMENTS = "engagements";
  private Integer engagements;

  public static final String JSON_PROPERTY_TOTAL_SENT = "total_sent";
  private Integer totalSent;

  public ReportSummary() {
  }

  public ReportSummary opens(Integer opens) {
    
    this.opens = opens;
    return this;
  }

   /**
   * Get opens
   * @return opens
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOpens() {
    return opens;
  }


  @JsonProperty(JSON_PROPERTY_OPENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpens(Integer opens) {
    this.opens = opens;
  }


  public ReportSummary uniqueOpens(Integer uniqueOpens) {
    
    this.uniqueOpens = uniqueOpens;
    return this;
  }

   /**
   * Get uniqueOpens
   * @return uniqueOpens
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_OPENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUniqueOpens() {
    return uniqueOpens;
  }


  @JsonProperty(JSON_PROPERTY_UNIQUE_OPENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
  }


  public ReportSummary openRate(BigDecimal openRate) {
    
    this.openRate = openRate;
    return this;
  }

   /**
   * Get openRate
   * @return openRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPEN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOpenRate() {
    return openRate;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenRate(BigDecimal openRate) {
    this.openRate = openRate;
  }


  public ReportSummary clicks(Integer clicks) {
    
    this.clicks = clicks;
    return this;
  }

   /**
   * Get clicks
   * @return clicks
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClicks() {
    return clicks;
  }


  @JsonProperty(JSON_PROPERTY_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClicks(Integer clicks) {
    this.clicks = clicks;
  }


  public ReportSummary subscriberClicks(Integer subscriberClicks) {
    
    this.subscriberClicks = subscriberClicks;
    return this;
  }

   /**
   * Get subscriberClicks
   * @return subscriberClicks
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIBER_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSubscriberClicks() {
    return subscriberClicks;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBER_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriberClicks(Integer subscriberClicks) {
    this.subscriberClicks = subscriberClicks;
  }


  public ReportSummary clickRate(BigDecimal clickRate) {
    
    this.clickRate = clickRate;
    return this;
  }

   /**
   * Get clickRate
   * @return clickRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICK_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getClickRate() {
    return clickRate;
  }


  @JsonProperty(JSON_PROPERTY_CLICK_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClickRate(BigDecimal clickRate) {
    this.clickRate = clickRate;
  }


  public ReportSummary visits(Integer visits) {
    
    this.visits = visits;
    return this;
  }

   /**
   * Get visits
   * @return visits
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVisits() {
    return visits;
  }


  @JsonProperty(JSON_PROPERTY_VISITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisits(Integer visits) {
    this.visits = visits;
  }


  public ReportSummary uniqueVisits(Integer uniqueVisits) {
    
    this.uniqueVisits = uniqueVisits;
    return this;
  }

   /**
   * Get uniqueVisits
   * @return uniqueVisits
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_VISITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUniqueVisits() {
    return uniqueVisits;
  }


  @JsonProperty(JSON_PROPERTY_UNIQUE_VISITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniqueVisits(Integer uniqueVisits) {
    this.uniqueVisits = uniqueVisits;
  }


  public ReportSummary conversionRate(BigDecimal conversionRate) {
    
    this.conversionRate = conversionRate;
    return this;
  }

   /**
   * Get conversionRate
   * @return conversionRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONVERSION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getConversionRate() {
    return conversionRate;
  }


  @JsonProperty(JSON_PROPERTY_CONVERSION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConversionRate(BigDecimal conversionRate) {
    this.conversionRate = conversionRate;
  }


  public ReportSummary subscribes(Integer subscribes) {
    
    this.subscribes = subscribes;
    return this;
  }

   /**
   * Get subscribes
   * @return subscribes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIBES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSubscribes() {
    return subscribes;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscribes(Integer subscribes) {
    this.subscribes = subscribes;
  }


  public ReportSummary ecommerce(ReportSummaryEcommerce ecommerce) {
    
    this.ecommerce = ecommerce;
    return this;
  }

   /**
   * Get ecommerce
   * @return ecommerce
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ECOMMERCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReportSummaryEcommerce getEcommerce() {
    return ecommerce;
  }


  @JsonProperty(JSON_PROPERTY_ECOMMERCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEcommerce(ReportSummaryEcommerce ecommerce) {
    this.ecommerce = ecommerce;
  }


  public ReportSummary impressions(BigDecimal impressions) {
    
    this.impressions = impressions;
    return this;
  }

   /**
   * Get impressions
   * @return impressions
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPRESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getImpressions() {
    return impressions;
  }


  @JsonProperty(JSON_PROPERTY_IMPRESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImpressions(BigDecimal impressions) {
    this.impressions = impressions;
  }


  public ReportSummary reach(Integer reach) {
    
    this.reach = reach;
    return this;
  }

   /**
   * Get reach
   * @return reach
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REACH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getReach() {
    return reach;
  }


  @JsonProperty(JSON_PROPERTY_REACH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReach(Integer reach) {
    this.reach = reach;
  }


  public ReportSummary engagements(Integer engagements) {
    
    this.engagements = engagements;
    return this;
  }

   /**
   * Get engagements
   * @return engagements
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENGAGEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEngagements() {
    return engagements;
  }


  @JsonProperty(JSON_PROPERTY_ENGAGEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEngagements(Integer engagements) {
    this.engagements = engagements;
  }


  public ReportSummary totalSent(Integer totalSent) {
    
    this.totalSent = totalSent;
    return this;
  }

   /**
   * Get totalSent
   * @return totalSent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalSent() {
    return totalSent;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalSent(Integer totalSent) {
    this.totalSent = totalSent;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportSummary reportSummary = (ReportSummary) o;
    return Objects.equals(this.opens, reportSummary.opens) &&
        Objects.equals(this.uniqueOpens, reportSummary.uniqueOpens) &&
        Objects.equals(this.openRate, reportSummary.openRate) &&
        Objects.equals(this.clicks, reportSummary.clicks) &&
        Objects.equals(this.subscriberClicks, reportSummary.subscriberClicks) &&
        Objects.equals(this.clickRate, reportSummary.clickRate) &&
        Objects.equals(this.visits, reportSummary.visits) &&
        Objects.equals(this.uniqueVisits, reportSummary.uniqueVisits) &&
        Objects.equals(this.conversionRate, reportSummary.conversionRate) &&
        Objects.equals(this.subscribes, reportSummary.subscribes) &&
        Objects.equals(this.ecommerce, reportSummary.ecommerce) &&
        Objects.equals(this.impressions, reportSummary.impressions) &&
        Objects.equals(this.reach, reportSummary.reach) &&
        Objects.equals(this.engagements, reportSummary.engagements) &&
        Objects.equals(this.totalSent, reportSummary.totalSent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(opens, uniqueOpens, openRate, clicks, subscriberClicks, clickRate, visits, uniqueVisits, conversionRate, subscribes, ecommerce, impressions, reach, engagements, totalSent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportSummary {\n");
    sb.append("    opens: ").append(toIndentedString(opens)).append("\n");
    sb.append("    uniqueOpens: ").append(toIndentedString(uniqueOpens)).append("\n");
    sb.append("    openRate: ").append(toIndentedString(openRate)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    subscriberClicks: ").append(toIndentedString(subscriberClicks)).append("\n");
    sb.append("    clickRate: ").append(toIndentedString(clickRate)).append("\n");
    sb.append("    visits: ").append(toIndentedString(visits)).append("\n");
    sb.append("    uniqueVisits: ").append(toIndentedString(uniqueVisits)).append("\n");
    sb.append("    conversionRate: ").append(toIndentedString(conversionRate)).append("\n");
    sb.append("    subscribes: ").append(toIndentedString(subscribes)).append("\n");
    sb.append("    ecommerce: ").append(toIndentedString(ecommerce)).append("\n");
    sb.append("    impressions: ").append(toIndentedString(impressions)).append("\n");
    sb.append("    reach: ").append(toIndentedString(reach)).append("\n");
    sb.append("    engagements: ").append(toIndentedString(engagements)).append("\n");
    sb.append("    totalSent: ").append(toIndentedString(totalSent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

