/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Settings for the campaign including the email subject, from name, and from email address.
 */
@JsonPropertyOrder({
  CampaignSettings1.JSON_PROPERTY_SUBJECT_LINE,
  CampaignSettings1.JSON_PROPERTY_PREVIEW_TEXT,
  CampaignSettings1.JSON_PROPERTY_TITLE,
  CampaignSettings1.JSON_PROPERTY_FROM_NAME,
  CampaignSettings1.JSON_PROPERTY_REPLY_TO
})
@JsonTypeName("Campaign_Settings_1")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class CampaignSettings1 {
  public static final String JSON_PROPERTY_SUBJECT_LINE = "subject_line";
  private String subjectLine;

  public static final String JSON_PROPERTY_PREVIEW_TEXT = "preview_text";
  private String previewText;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_FROM_NAME = "from_name";
  private String fromName;

  public static final String JSON_PROPERTY_REPLY_TO = "reply_to";
  private String replyTo;

  public CampaignSettings1() {
  }

  public CampaignSettings1 subjectLine(String subjectLine) {
    
    this.subjectLine = subjectLine;
    return this;
  }

   /**
   * The subject line for the campaign.
   * @return subjectLine
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubjectLine() {
    return subjectLine;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubjectLine(String subjectLine) {
    this.subjectLine = subjectLine;
  }


  public CampaignSettings1 previewText(String previewText) {
    
    this.previewText = previewText;
    return this;
  }

   /**
   * The preview text for the campaign.
   * @return previewText
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIEW_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreviewText() {
    return previewText;
  }


  @JsonProperty(JSON_PROPERTY_PREVIEW_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviewText(String previewText) {
    this.previewText = previewText;
  }


  public CampaignSettings1 title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title of the Automation.
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public CampaignSettings1 fromName(String fromName) {
    
    this.fromName = fromName;
    return this;
  }

   /**
   * The &#39;from&#39; name for the Automation (not an email address).
   * @return fromName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromName() {
    return fromName;
  }


  @JsonProperty(JSON_PROPERTY_FROM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromName(String fromName) {
    this.fromName = fromName;
  }


  public CampaignSettings1 replyTo(String replyTo) {
    
    this.replyTo = replyTo;
    return this;
  }

   /**
   * The reply-to email address for the Automation.
   * @return replyTo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReplyTo() {
    return replyTo;
  }


  @JsonProperty(JSON_PROPERTY_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplyTo(String replyTo) {
    this.replyTo = replyTo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignSettings1 campaignSettings1 = (CampaignSettings1) o;
    return Objects.equals(this.subjectLine, campaignSettings1.subjectLine) &&
        Objects.equals(this.previewText, campaignSettings1.previewText) &&
        Objects.equals(this.title, campaignSettings1.title) &&
        Objects.equals(this.fromName, campaignSettings1.fromName) &&
        Objects.equals(this.replyTo, campaignSettings1.replyTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subjectLine, previewText, title, fromName, replyTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignSettings1 {\n");
    sb.append("    subjectLine: ").append(toIndentedString(subjectLine)).append("\n");
    sb.append("    previewText: ").append(toIndentedString(previewText)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

