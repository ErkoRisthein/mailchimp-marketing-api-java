/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.TwitterStatus;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A summary of Twitter activity for a campaign.
 */
@JsonPropertyOrder({
  TwitterStats.JSON_PROPERTY_TWEETS,
  TwitterStats.JSON_PROPERTY_FIRST_TWEET,
  TwitterStats.JSON_PROPERTY_LAST_TWEET,
  TwitterStats.JSON_PROPERTY_RETWEETS,
  TwitterStats.JSON_PROPERTY_STATUSES
})
@JsonTypeName("Twitter_Stats")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class TwitterStats {
  public static final String JSON_PROPERTY_TWEETS = "tweets";
  private Integer tweets;

  public static final String JSON_PROPERTY_FIRST_TWEET = "first_tweet";
  private String firstTweet;

  public static final String JSON_PROPERTY_LAST_TWEET = "last_tweet";
  private String lastTweet;

  public static final String JSON_PROPERTY_RETWEETS = "retweets";
  private Integer retweets;

  public static final String JSON_PROPERTY_STATUSES = "statuses";
  private List<TwitterStatus> statuses;

  public TwitterStats() {
  }

  @JsonCreator
  public TwitterStats(
    @JsonProperty(JSON_PROPERTY_TWEETS) Integer tweets, 
    @JsonProperty(JSON_PROPERTY_FIRST_TWEET) String firstTweet, 
    @JsonProperty(JSON_PROPERTY_LAST_TWEET) String lastTweet, 
    @JsonProperty(JSON_PROPERTY_RETWEETS) Integer retweets, 
    @JsonProperty(JSON_PROPERTY_STATUSES) List<TwitterStatus> statuses
  ) {
    this();
    this.tweets = tweets;
    this.firstTweet = firstTweet;
    this.lastTweet = lastTweet;
    this.retweets = retweets;
    this.statuses = statuses;
  }

   /**
   * The number of tweets including a link to the campaign.
   * @return tweets
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TWEETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTweets() {
    return tweets;
  }




   /**
   * The day and time of the first recorded tweet with a link to the campaign.
   * @return firstTweet
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_TWEET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstTweet() {
    return firstTweet;
  }




   /**
   * The day and time of the last recorded tweet with a link to the campaign.
   * @return lastTweet
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_TWEET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastTweet() {
    return lastTweet;
  }




   /**
   * The number of retweets that include a link to the campaign.
   * @return retweets
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETWEETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRetweets() {
    return retweets;
  }




   /**
   * A summary of tweets that include a link to the campaign.
   * @return statuses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TwitterStatus> getStatuses() {
    return statuses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TwitterStats twitterStats = (TwitterStats) o;
    return Objects.equals(this.tweets, twitterStats.tweets) &&
        Objects.equals(this.firstTweet, twitterStats.firstTweet) &&
        Objects.equals(this.lastTweet, twitterStats.lastTweet) &&
        Objects.equals(this.retweets, twitterStats.retweets) &&
        Objects.equals(this.statuses, twitterStats.statuses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tweets, firstTweet, lastTweet, retweets, statuses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TwitterStats {\n");
    sb.append("    tweets: ").append(toIndentedString(tweets)).append("\n");
    sb.append("    firstTweet: ").append(toIndentedString(firstTweet)).append("\n");
    sb.append("    lastTweet: ").append(toIndentedString(lastTweet)).append("\n");
    sb.append("    retweets: ").append(toIndentedString(retweets)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

