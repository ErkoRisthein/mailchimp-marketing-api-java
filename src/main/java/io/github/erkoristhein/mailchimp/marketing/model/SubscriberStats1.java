/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.EcommerceStats;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Open and click rates for this subscriber.
 */
@JsonPropertyOrder({
  SubscriberStats1.JSON_PROPERTY_AVG_OPEN_RATE,
  SubscriberStats1.JSON_PROPERTY_AVG_CLICK_RATE,
  SubscriberStats1.JSON_PROPERTY_ECOMMERCE_DATA
})
@JsonTypeName("Subscriber_Stats_1")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class SubscriberStats1 {
  public static final String JSON_PROPERTY_AVG_OPEN_RATE = "avg_open_rate";
  private BigDecimal avgOpenRate;

  public static final String JSON_PROPERTY_AVG_CLICK_RATE = "avg_click_rate";
  private BigDecimal avgClickRate;

  public static final String JSON_PROPERTY_ECOMMERCE_DATA = "ecommerce_data";
  private EcommerceStats ecommerceData;

  public SubscriberStats1() {
  }

  @JsonCreator
  public SubscriberStats1(
    @JsonProperty(JSON_PROPERTY_AVG_OPEN_RATE) BigDecimal avgOpenRate, 
    @JsonProperty(JSON_PROPERTY_AVG_CLICK_RATE) BigDecimal avgClickRate
  ) {
    this();
    this.avgOpenRate = avgOpenRate;
    this.avgClickRate = avgClickRate;
  }

   /**
   * A subscriber&#39;s average open rate.
   * @return avgOpenRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_OPEN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgOpenRate() {
    return avgOpenRate;
  }




   /**
   * A subscriber&#39;s average clickthrough rate.
   * @return avgClickRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVG_CLICK_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvgClickRate() {
    return avgClickRate;
  }




  public SubscriberStats1 ecommerceData(EcommerceStats ecommerceData) {
    
    this.ecommerceData = ecommerceData;
    return this;
  }

   /**
   * Get ecommerceData
   * @return ecommerceData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ECOMMERCE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EcommerceStats getEcommerceData() {
    return ecommerceData;
  }


  @JsonProperty(JSON_PROPERTY_ECOMMERCE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEcommerceData(EcommerceStats ecommerceData) {
    this.ecommerceData = ecommerceData;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriberStats1 subscriberStats1 = (SubscriberStats1) o;
    return Objects.equals(this.avgOpenRate, subscriberStats1.avgOpenRate) &&
        Objects.equals(this.avgClickRate, subscriberStats1.avgClickRate) &&
        Objects.equals(this.ecommerceData, subscriberStats1.ecommerceData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avgOpenRate, avgClickRate, ecommerceData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriberStats1 {\n");
    sb.append("    avgOpenRate: ").append(toIndentedString(avgOpenRate)).append("\n");
    sb.append("    avgClickRate: ").append(toIndentedString(avgClickRate)).append("\n");
    sb.append("    ecommerceData: ").append(toIndentedString(ecommerceData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

