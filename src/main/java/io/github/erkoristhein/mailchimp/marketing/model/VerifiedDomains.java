/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The verified domains currently on the account.
 */
@JsonPropertyOrder({
  VerifiedDomains.JSON_PROPERTY_DOMAIN,
  VerifiedDomains.JSON_PROPERTY_VERIFIED,
  VerifiedDomains.JSON_PROPERTY_AUTHENTICATED,
  VerifiedDomains.JSON_PROPERTY_VERIFICATION_EMAIL,
  VerifiedDomains.JSON_PROPERTY_VERIFICATION_SENT
})
@JsonTypeName("Verified_Domains")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class VerifiedDomains {
  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_VERIFIED = "verified";
  private Boolean verified;

  public static final String JSON_PROPERTY_AUTHENTICATED = "authenticated";
  private Boolean authenticated;

  public static final String JSON_PROPERTY_VERIFICATION_EMAIL = "verification_email";
  private String verificationEmail;

  public static final String JSON_PROPERTY_VERIFICATION_SENT = "verification_sent";
  private OffsetDateTime verificationSent;

  public VerifiedDomains() {
  }

  @JsonCreator
  public VerifiedDomains(
    @JsonProperty(JSON_PROPERTY_DOMAIN) String domain, 
    @JsonProperty(JSON_PROPERTY_VERIFIED) Boolean verified, 
    @JsonProperty(JSON_PROPERTY_AUTHENTICATED) Boolean authenticated, 
    @JsonProperty(JSON_PROPERTY_VERIFICATION_EMAIL) String verificationEmail, 
    @JsonProperty(JSON_PROPERTY_VERIFICATION_SENT) OffsetDateTime verificationSent
  ) {
    this();
    this.domain = domain;
    this.verified = verified;
    this.authenticated = authenticated;
    this.verificationEmail = verificationEmail;
    this.verificationSent = verificationSent;
  }

   /**
   * The name of this domain.
   * @return domain
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }




   /**
   * Whether the domain has been verified for sending.
   * @return verified
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVerified() {
    return verified;
  }




   /**
   * Whether domain authentication is enabled for this domain.
   * @return authenticated
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAuthenticated() {
    return authenticated;
  }




   /**
   * The e-mail address receiving the two-factor challenge for this domain.
   * @return verificationEmail
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFICATION_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVerificationEmail() {
    return verificationEmail;
  }




   /**
   * The date/time that the two-factor challenge was sent to the verification email.
   * @return verificationSent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFICATION_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getVerificationSent() {
    return verificationSent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifiedDomains verifiedDomains = (VerifiedDomains) o;
    return Objects.equals(this.domain, verifiedDomains.domain) &&
        Objects.equals(this.verified, verifiedDomains.verified) &&
        Objects.equals(this.authenticated, verifiedDomains.authenticated) &&
        Objects.equals(this.verificationEmail, verifiedDomains.verificationEmail) &&
        Objects.equals(this.verificationSent, verifiedDomains.verificationSent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, verified, authenticated, verificationEmail, verificationSent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifiedDomains {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    authenticated: ").append(toIndentedString(authenticated)).append("\n");
    sb.append("    verificationEmail: ").append(toIndentedString(verificationEmail)).append("\n");
    sb.append("    verificationSent: ").append(toIndentedString(verificationSent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

