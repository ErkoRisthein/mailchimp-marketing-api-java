/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The average campaign statistics for your list. This won&#39;t be present if we haven&#39;t calculated it yet for this list.
 */
@JsonPropertyOrder({
  ListStats.JSON_PROPERTY_SUB_RATE,
  ListStats.JSON_PROPERTY_UNSUB_RATE,
  ListStats.JSON_PROPERTY_OPEN_RATE,
  ListStats.JSON_PROPERTY_CLICK_RATE
})
@JsonTypeName("List_Stats")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class ListStats {
  public static final String JSON_PROPERTY_SUB_RATE = "sub_rate";
  private BigDecimal subRate;

  public static final String JSON_PROPERTY_UNSUB_RATE = "unsub_rate";
  private BigDecimal unsubRate;

  public static final String JSON_PROPERTY_OPEN_RATE = "open_rate";
  private BigDecimal openRate;

  public static final String JSON_PROPERTY_CLICK_RATE = "click_rate";
  private BigDecimal clickRate;

  public ListStats() {
  }

  @JsonCreator
  public ListStats(
    @JsonProperty(JSON_PROPERTY_SUB_RATE) BigDecimal subRate, 
    @JsonProperty(JSON_PROPERTY_UNSUB_RATE) BigDecimal unsubRate, 
    @JsonProperty(JSON_PROPERTY_OPEN_RATE) BigDecimal openRate, 
    @JsonProperty(JSON_PROPERTY_CLICK_RATE) BigDecimal clickRate
  ) {
    this();
    this.subRate = subRate;
    this.unsubRate = unsubRate;
    this.openRate = openRate;
    this.clickRate = clickRate;
  }

   /**
   * The average number of subscriptions per month for the list.
   * @return subRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSubRate() {
    return subRate;
  }




   /**
   * The average number of unsubscriptions per month for the list.
   * @return unsubRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNSUB_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUnsubRate() {
    return unsubRate;
  }




   /**
   * The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list.
   * @return openRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPEN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOpenRate() {
    return openRate;
  }




   /**
   * The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list.
   * @return clickRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICK_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getClickRate() {
    return clickRate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListStats listStats = (ListStats) o;
    return Objects.equals(this.subRate, listStats.subRate) &&
        Objects.equals(this.unsubRate, listStats.unsubRate) &&
        Objects.equals(this.openRate, listStats.openRate) &&
        Objects.equals(this.clickRate, listStats.clickRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subRate, unsubRate, openRate, clickRate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListStats {\n");
    sb.append("    subRate: ").append(toIndentedString(subRate)).append("\n");
    sb.append("    unsubRate: ").append(toIndentedString(unsubRate)).append("\n");
    sb.append("    openRate: ").append(toIndentedString(openRate)).append("\n");
    sb.append("    clickRate: ").append(toIndentedString(clickRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

