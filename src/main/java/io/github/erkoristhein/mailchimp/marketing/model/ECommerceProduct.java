/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ECommerceProductImage;
import io.github.erkoristhein.mailchimp.marketing.model.ECommerceProductVariant;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information about a specific product.
 */
@JsonPropertyOrder({
  ECommerceProduct.JSON_PROPERTY_ID,
  ECommerceProduct.JSON_PROPERTY_CURRENCY_CODE,
  ECommerceProduct.JSON_PROPERTY_TITLE,
  ECommerceProduct.JSON_PROPERTY_HANDLE,
  ECommerceProduct.JSON_PROPERTY_URL,
  ECommerceProduct.JSON_PROPERTY_DESCRIPTION,
  ECommerceProduct.JSON_PROPERTY_TYPE,
  ECommerceProduct.JSON_PROPERTY_VENDOR,
  ECommerceProduct.JSON_PROPERTY_IMAGE_URL,
  ECommerceProduct.JSON_PROPERTY_VARIANTS,
  ECommerceProduct.JSON_PROPERTY_IMAGES,
  ECommerceProduct.JSON_PROPERTY_PUBLISHED_AT_FOREIGN,
  ECommerceProduct.JSON_PROPERTY_LINKS
})
@JsonTypeName("E_commerce_Product")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class ECommerceProduct {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CURRENCY_CODE = "currency_code";
  private String currencyCode;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_HANDLE = "handle";
  private String handle;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_VENDOR = "vendor";
  private String vendor;

  public static final String JSON_PROPERTY_IMAGE_URL = "image_url";
  private String imageUrl;

  public static final String JSON_PROPERTY_VARIANTS = "variants";
  private List<ECommerceProductVariant> variants = new ArrayList<>();

  public static final String JSON_PROPERTY_IMAGES = "images";
  private List<ECommerceProductImage> images = new ArrayList<>();

  public static final String JSON_PROPERTY_PUBLISHED_AT_FOREIGN = "published_at_foreign";
  private OffsetDateTime publishedAtForeign;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links = new ArrayList<>();

  public ECommerceProduct() {
  }

  @JsonCreator
  public ECommerceProduct(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_CURRENCY_CODE) String currencyCode, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.currencyCode = currencyCode;
    this.links = links;
  }

   /**
   * A unique identifier for the product.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




   /**
   * The currency code
   * @return currencyCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencyCode() {
    return currencyCode;
  }




  public ECommerceProduct title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title of a product.
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public ECommerceProduct handle(String handle) {
    
    this.handle = handle;
    return this;
  }

   /**
   * The handle of a product.
   * @return handle
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HANDLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHandle() {
    return handle;
  }


  @JsonProperty(JSON_PROPERTY_HANDLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHandle(String handle) {
    this.handle = handle;
  }


  public ECommerceProduct url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The URL for a product.
   * @return url
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ECommerceProduct description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of a product.
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ECommerceProduct type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of product.
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ECommerceProduct vendor(String vendor) {
    
    this.vendor = vendor;
    return this;
  }

   /**
   * The vendor for a product.
   * @return vendor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VENDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVendor() {
    return vendor;
  }


  @JsonProperty(JSON_PROPERTY_VENDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  public ECommerceProduct imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * The image URL for a product.
   * @return imageUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageUrl() {
    return imageUrl;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public ECommerceProduct variants(List<ECommerceProductVariant> variants) {
    
    this.variants = variants;
    return this;
  }

  public ECommerceProduct addVariantsItem(ECommerceProductVariant variantsItem) {
    if (this.variants == null) {
      this.variants = new ArrayList<>();
    }
    this.variants.add(variantsItem);
    return this;
  }

   /**
   * Returns up to 50 of the product&#39;s variants. To retrieve all variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/).
   * @return variants
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VARIANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ECommerceProductVariant> getVariants() {
    return variants;
  }


  @JsonProperty(JSON_PROPERTY_VARIANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariants(List<ECommerceProductVariant> variants) {
    this.variants = variants;
  }


  public ECommerceProduct images(List<ECommerceProductImage> images) {
    
    this.images = images;
    return this;
  }

  public ECommerceProduct addImagesItem(ECommerceProductImage imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * An array of the product&#39;s images.
   * @return images
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ECommerceProductImage> getImages() {
    return images;
  }


  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImages(List<ECommerceProductImage> images) {
    this.images = images;
  }


  public ECommerceProduct publishedAtForeign(OffsetDateTime publishedAtForeign) {
    
    this.publishedAtForeign = publishedAtForeign;
    return this;
  }

   /**
   * The date and time the product was published in ISO 8601 format.
   * @return publishedAtForeign
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLISHED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getPublishedAtForeign() {
    return publishedAtForeign;
  }


  @JsonProperty(JSON_PROPERTY_PUBLISHED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublishedAtForeign(OffsetDateTime publishedAtForeign) {
    this.publishedAtForeign = publishedAtForeign;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECommerceProduct eCommerceProduct = (ECommerceProduct) o;
    return Objects.equals(this.id, eCommerceProduct.id) &&
        Objects.equals(this.currencyCode, eCommerceProduct.currencyCode) &&
        Objects.equals(this.title, eCommerceProduct.title) &&
        Objects.equals(this.handle, eCommerceProduct.handle) &&
        Objects.equals(this.url, eCommerceProduct.url) &&
        Objects.equals(this.description, eCommerceProduct.description) &&
        Objects.equals(this.type, eCommerceProduct.type) &&
        Objects.equals(this.vendor, eCommerceProduct.vendor) &&
        Objects.equals(this.imageUrl, eCommerceProduct.imageUrl) &&
        Objects.equals(this.variants, eCommerceProduct.variants) &&
        Objects.equals(this.images, eCommerceProduct.images) &&
        Objects.equals(this.publishedAtForeign, eCommerceProduct.publishedAtForeign) &&
        Objects.equals(this.links, eCommerceProduct.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, currencyCode, title, handle, url, description, type, vendor, imageUrl, variants, images, publishedAtForeign, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECommerceProduct {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    handle: ").append(toIndentedString(handle)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    variants: ").append(toIndentedString(variants)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    publishedAtForeign: ").append(toIndentedString(publishedAtForeign)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

