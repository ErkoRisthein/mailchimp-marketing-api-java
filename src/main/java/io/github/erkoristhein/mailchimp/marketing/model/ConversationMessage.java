/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An individual message in a conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your Mailchimp account.
 */
@JsonPropertyOrder({
  ConversationMessage.JSON_PROPERTY_ID,
  ConversationMessage.JSON_PROPERTY_CONVERSATION_ID,
  ConversationMessage.JSON_PROPERTY_LIST_ID,
  ConversationMessage.JSON_PROPERTY_FROM_LABEL,
  ConversationMessage.JSON_PROPERTY_FROM_EMAIL,
  ConversationMessage.JSON_PROPERTY_SUBJECT,
  ConversationMessage.JSON_PROPERTY_MESSAGE,
  ConversationMessage.JSON_PROPERTY_READ,
  ConversationMessage.JSON_PROPERTY_TIMESTAMP,
  ConversationMessage.JSON_PROPERTY_LINKS
})
@JsonTypeName("Conversation_Message")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class ConversationMessage {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CONVERSATION_ID = "conversation_id";
  private String conversationId;

  public static final String JSON_PROPERTY_LIST_ID = "list_id";
  private Integer listId;

  public static final String JSON_PROPERTY_FROM_LABEL = "from_label";
  private String fromLabel;

  public static final String JSON_PROPERTY_FROM_EMAIL = "from_email";
  private String fromEmail;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_READ = "read";
  private Boolean read;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private OffsetDateTime timestamp;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links;

  public ConversationMessage() {
  }

  @JsonCreator
  public ConversationMessage(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_CONVERSATION_ID) String conversationId, 
    @JsonProperty(JSON_PROPERTY_LIST_ID) Integer listId, 
    @JsonProperty(JSON_PROPERTY_FROM_LABEL) String fromLabel, 
    @JsonProperty(JSON_PROPERTY_TIMESTAMP) OffsetDateTime timestamp, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.conversationId = conversationId;
    this.listId = listId;
    this.fromLabel = fromLabel;
    this.timestamp = timestamp;
    this.links = links;
  }

   /**
   * A string that uniquely identifies this message
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




   /**
   * A string that identifies this message&#39;s conversation
   * @return conversationId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONVERSATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConversationId() {
    return conversationId;
  }




   /**
   * The list&#39;s web ID
   * @return listId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getListId() {
    return listId;
  }




   /**
   * A label representing the sender of this message
   * @return fromLabel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromLabel() {
    return fromLabel;
  }




  public ConversationMessage fromEmail(String fromEmail) {
    
    this.fromEmail = fromEmail;
    return this;
  }

   /**
   * A label representing the email of the sender of this message
   * @return fromEmail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromEmail() {
    return fromEmail;
  }


  @JsonProperty(JSON_PROPERTY_FROM_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
  }


  public ConversationMessage subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * The subject of this message
   * @return subject
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public ConversationMessage message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * The plain-text content of the message
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public ConversationMessage read(Boolean read) {
    
    this.read = read;
    return this;
  }

   /**
   * Whether this message has been marked as read
   * @return read
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRead() {
    return read;
  }


  @JsonProperty(JSON_PROPERTY_READ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRead(Boolean read) {
    this.read = read;
  }


   /**
   * The date and time the message was either sent or received in ISO 8601 format.
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getTimestamp() {
    return timestamp;
  }




   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationMessage conversationMessage = (ConversationMessage) o;
    return Objects.equals(this.id, conversationMessage.id) &&
        Objects.equals(this.conversationId, conversationMessage.conversationId) &&
        Objects.equals(this.listId, conversationMessage.listId) &&
        Objects.equals(this.fromLabel, conversationMessage.fromLabel) &&
        Objects.equals(this.fromEmail, conversationMessage.fromEmail) &&
        Objects.equals(this.subject, conversationMessage.subject) &&
        Objects.equals(this.message, conversationMessage.message) &&
        Objects.equals(this.read, conversationMessage.read) &&
        Objects.equals(this.timestamp, conversationMessage.timestamp) &&
        Objects.equals(this.links, conversationMessage.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, conversationId, listId, fromLabel, fromEmail, subject, message, read, timestamp, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationMessage {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    conversationId: ").append(toIndentedString(conversationId)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    fromLabel: ").append(toIndentedString(fromLabel)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    read: ").append(toIndentedString(read)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

