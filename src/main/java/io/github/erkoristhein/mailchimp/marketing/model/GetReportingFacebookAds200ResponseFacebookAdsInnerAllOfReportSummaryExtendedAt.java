/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt
 */
@JsonPropertyOrder({
  GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt.JSON_PROPERTY_DATETIME,
  GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt.JSON_PROPERTY_TIMEZONE
})
@JsonTypeName("getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_extended_at")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt {
  public static final String JSON_PROPERTY_DATETIME = "datetime";
  private String datetime;

  public static final String JSON_PROPERTY_TIMEZONE = "timezone";
  private String timezone;

  public GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt() {
  }

  public GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt datetime(String datetime) {
    
    this.datetime = datetime;
    return this;
  }

   /**
   * Get datetime
   * @return datetime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATETIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatetime() {
    return datetime;
  }


  @JsonProperty(JSON_PROPERTY_DATETIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatetime(String datetime) {
    this.datetime = datetime;
  }


  public GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimezone() {
    return timezone;
  }


  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt getReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt = (GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt) o;
    return Objects.equals(this.datetime, getReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt.datetime) &&
        Objects.equals(this.timezone, getReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt.timezone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datetime, timezone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt {\n");
    sb.append("    datetime: ").append(toIndentedString(datetime)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

