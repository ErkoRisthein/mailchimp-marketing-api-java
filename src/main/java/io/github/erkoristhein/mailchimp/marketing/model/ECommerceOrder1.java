/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.BillingAddress1;
import io.github.erkoristhein.mailchimp.marketing.model.ECommerceCustomer1;
import io.github.erkoristhein.mailchimp.marketing.model.ECommerceOrderLineItem1;
import io.github.erkoristhein.mailchimp.marketing.model.Outreach1;
import io.github.erkoristhein.mailchimp.marketing.model.PromosInner1;
import io.github.erkoristhein.mailchimp.marketing.model.ShippingAddress1;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information about a specific order.
 */
@JsonPropertyOrder({
  ECommerceOrder1.JSON_PROPERTY_ID,
  ECommerceOrder1.JSON_PROPERTY_CUSTOMER,
  ECommerceOrder1.JSON_PROPERTY_CAMPAIGN_ID,
  ECommerceOrder1.JSON_PROPERTY_LANDING_SITE,
  ECommerceOrder1.JSON_PROPERTY_FINANCIAL_STATUS,
  ECommerceOrder1.JSON_PROPERTY_FULFILLMENT_STATUS,
  ECommerceOrder1.JSON_PROPERTY_CURRENCY_CODE,
  ECommerceOrder1.JSON_PROPERTY_ORDER_TOTAL,
  ECommerceOrder1.JSON_PROPERTY_ORDER_URL,
  ECommerceOrder1.JSON_PROPERTY_DISCOUNT_TOTAL,
  ECommerceOrder1.JSON_PROPERTY_TAX_TOTAL,
  ECommerceOrder1.JSON_PROPERTY_SHIPPING_TOTAL,
  ECommerceOrder1.JSON_PROPERTY_TRACKING_CODE,
  ECommerceOrder1.JSON_PROPERTY_PROCESSED_AT_FOREIGN,
  ECommerceOrder1.JSON_PROPERTY_CANCELLED_AT_FOREIGN,
  ECommerceOrder1.JSON_PROPERTY_UPDATED_AT_FOREIGN,
  ECommerceOrder1.JSON_PROPERTY_SHIPPING_ADDRESS,
  ECommerceOrder1.JSON_PROPERTY_BILLING_ADDRESS,
  ECommerceOrder1.JSON_PROPERTY_PROMOS,
  ECommerceOrder1.JSON_PROPERTY_LINES,
  ECommerceOrder1.JSON_PROPERTY_OUTREACH,
  ECommerceOrder1.JSON_PROPERTY_TRACKING_NUMBER,
  ECommerceOrder1.JSON_PROPERTY_TRACKING_CARRIER,
  ECommerceOrder1.JSON_PROPERTY_TRACKING_URL
})
@JsonTypeName("E_commerce_Order_1")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class ECommerceOrder1 {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private ECommerceCustomer1 customer;

  public static final String JSON_PROPERTY_CAMPAIGN_ID = "campaign_id";
  private String campaignId;

  public static final String JSON_PROPERTY_LANDING_SITE = "landing_site";
  private String landingSite;

  public static final String JSON_PROPERTY_FINANCIAL_STATUS = "financial_status";
  private String financialStatus;

  public static final String JSON_PROPERTY_FULFILLMENT_STATUS = "fulfillment_status";
  private String fulfillmentStatus;

  public static final String JSON_PROPERTY_CURRENCY_CODE = "currency_code";
  private String currencyCode;

  public static final String JSON_PROPERTY_ORDER_TOTAL = "order_total";
  private BigDecimal orderTotal;

  public static final String JSON_PROPERTY_ORDER_URL = "order_url";
  private String orderUrl;

  public static final String JSON_PROPERTY_DISCOUNT_TOTAL = "discount_total";
  private BigDecimal discountTotal;

  public static final String JSON_PROPERTY_TAX_TOTAL = "tax_total";
  private BigDecimal taxTotal;

  public static final String JSON_PROPERTY_SHIPPING_TOTAL = "shipping_total";
  private BigDecimal shippingTotal;

  /**
   * The Mailchimp tracking code for the order. Uses the &#39;mc_tc&#39; parameter in E-Commerce tracking URLs.
   */
  public enum TrackingCodeEnum {
    PREC("prec");

    private String value;

    TrackingCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TrackingCodeEnum fromValue(String value) {
      for (TrackingCodeEnum b : TrackingCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TRACKING_CODE = "tracking_code";
  private TrackingCodeEnum trackingCode;

  public static final String JSON_PROPERTY_PROCESSED_AT_FOREIGN = "processed_at_foreign";
  private OffsetDateTime processedAtForeign;

  public static final String JSON_PROPERTY_CANCELLED_AT_FOREIGN = "cancelled_at_foreign";
  private OffsetDateTime cancelledAtForeign;

  public static final String JSON_PROPERTY_UPDATED_AT_FOREIGN = "updated_at_foreign";
  private OffsetDateTime updatedAtForeign;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS = "shipping_address";
  private ShippingAddress1 shippingAddress;

  public static final String JSON_PROPERTY_BILLING_ADDRESS = "billing_address";
  private BillingAddress1 billingAddress;

  public static final String JSON_PROPERTY_PROMOS = "promos";
  private List<PromosInner1> promos;

  public static final String JSON_PROPERTY_LINES = "lines";
  private List<ECommerceOrderLineItem1> lines = new ArrayList<>();

  public static final String JSON_PROPERTY_OUTREACH = "outreach";
  private Outreach1 outreach;

  public static final String JSON_PROPERTY_TRACKING_NUMBER = "tracking_number";
  private String trackingNumber;

  public static final String JSON_PROPERTY_TRACKING_CARRIER = "tracking_carrier";
  private String trackingCarrier;

  public static final String JSON_PROPERTY_TRACKING_URL = "tracking_url";
  private String trackingUrl;

  public ECommerceOrder1() {
  }

  public ECommerceOrder1 id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * A unique identifier for the order.
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ECommerceOrder1 customer(ECommerceCustomer1 customer) {
    
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ECommerceCustomer1 getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomer(ECommerceCustomer1 customer) {
    this.customer = customer;
  }


  public ECommerceOrder1 campaignId(String campaignId) {
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * A string that uniquely identifies the campaign for an order.
   * @return campaignId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAMPAIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCampaignId() {
    return campaignId;
  }


  @JsonProperty(JSON_PROPERTY_CAMPAIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }


  public ECommerceOrder1 landingSite(String landingSite) {
    
    this.landingSite = landingSite;
    return this;
  }

   /**
   * The URL for the page where the buyer landed when entering the shop.
   * @return landingSite
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANDING_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLandingSite() {
    return landingSite;
  }


  @JsonProperty(JSON_PROPERTY_LANDING_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLandingSite(String landingSite) {
    this.landingSite = landingSite;
  }


  public ECommerceOrder1 financialStatus(String financialStatus) {
    
    this.financialStatus = financialStatus;
    return this;
  }

   /**
   * The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
   * @return financialStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINANCIAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFinancialStatus() {
    return financialStatus;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinancialStatus(String financialStatus) {
    this.financialStatus = financialStatus;
  }


  public ECommerceOrder1 fulfillmentStatus(String fulfillmentStatus) {
    
    this.fulfillmentStatus = fulfillmentStatus;
    return this;
  }

   /**
   * The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
   * @return fulfillmentStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULFILLMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFulfillmentStatus() {
    return fulfillmentStatus;
  }


  @JsonProperty(JSON_PROPERTY_FULFILLMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFulfillmentStatus(String fulfillmentStatus) {
    this.fulfillmentStatus = fulfillmentStatus;
  }


  public ECommerceOrder1 currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The three-letter ISO 4217 code for the currency that the store accepts.
   * @return currencyCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrencyCode() {
    return currencyCode;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ECommerceOrder1 orderTotal(BigDecimal orderTotal) {
    
    this.orderTotal = orderTotal;
    return this;
  }

   /**
   * The total for the order.
   * @return orderTotal
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDER_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getOrderTotal() {
    return orderTotal;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderTotal(BigDecimal orderTotal) {
    this.orderTotal = orderTotal;
  }


  public ECommerceOrder1 orderUrl(String orderUrl) {
    
    this.orderUrl = orderUrl;
    return this;
  }

   /**
   * The URL for the order.
   * @return orderUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrderUrl() {
    return orderUrl;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderUrl(String orderUrl) {
    this.orderUrl = orderUrl;
  }


  public ECommerceOrder1 discountTotal(BigDecimal discountTotal) {
    
    this.discountTotal = discountTotal;
    return this;
  }

   /**
   * The total amount of the discounts to be applied to the price of the order.
   * @return discountTotal
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISCOUNT_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDiscountTotal() {
    return discountTotal;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscountTotal(BigDecimal discountTotal) {
    this.discountTotal = discountTotal;
  }


  public ECommerceOrder1 taxTotal(BigDecimal taxTotal) {
    
    this.taxTotal = taxTotal;
    return this;
  }

   /**
   * The tax total for the order.
   * @return taxTotal
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTaxTotal() {
    return taxTotal;
  }


  @JsonProperty(JSON_PROPERTY_TAX_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxTotal(BigDecimal taxTotal) {
    this.taxTotal = taxTotal;
  }


  public ECommerceOrder1 shippingTotal(BigDecimal shippingTotal) {
    
    this.shippingTotal = shippingTotal;
    return this;
  }

   /**
   * The shipping total for the order.
   * @return shippingTotal
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getShippingTotal() {
    return shippingTotal;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingTotal(BigDecimal shippingTotal) {
    this.shippingTotal = shippingTotal;
  }


  public ECommerceOrder1 trackingCode(TrackingCodeEnum trackingCode) {
    
    this.trackingCode = trackingCode;
    return this;
  }

   /**
   * The Mailchimp tracking code for the order. Uses the &#39;mc_tc&#39; parameter in E-Commerce tracking URLs.
   * @return trackingCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACKING_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TrackingCodeEnum getTrackingCode() {
    return trackingCode;
  }


  @JsonProperty(JSON_PROPERTY_TRACKING_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackingCode(TrackingCodeEnum trackingCode) {
    this.trackingCode = trackingCode;
  }


  public ECommerceOrder1 processedAtForeign(OffsetDateTime processedAtForeign) {
    
    this.processedAtForeign = processedAtForeign;
    return this;
  }

   /**
   * The date and time the order was processed in ISO 8601 format.
   * @return processedAtForeign
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESSED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getProcessedAtForeign() {
    return processedAtForeign;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessedAtForeign(OffsetDateTime processedAtForeign) {
    this.processedAtForeign = processedAtForeign;
  }


  public ECommerceOrder1 cancelledAtForeign(OffsetDateTime cancelledAtForeign) {
    
    this.cancelledAtForeign = cancelledAtForeign;
    return this;
  }

   /**
   * The date and time the order was cancelled in ISO 8601 format. Note: passing a value for this parameter will cancel the order being created.
   * @return cancelledAtForeign
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCELLED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCancelledAtForeign() {
    return cancelledAtForeign;
  }


  @JsonProperty(JSON_PROPERTY_CANCELLED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancelledAtForeign(OffsetDateTime cancelledAtForeign) {
    this.cancelledAtForeign = cancelledAtForeign;
  }


  public ECommerceOrder1 updatedAtForeign(OffsetDateTime updatedAtForeign) {
    
    this.updatedAtForeign = updatedAtForeign;
    return this;
  }

   /**
   * The date and time the order was updated in ISO 8601 format.
   * @return updatedAtForeign
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAtForeign() {
    return updatedAtForeign;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAtForeign(OffsetDateTime updatedAtForeign) {
    this.updatedAtForeign = updatedAtForeign;
  }


  public ECommerceOrder1 shippingAddress(ShippingAddress1 shippingAddress) {
    
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShippingAddress1 getShippingAddress() {
    return shippingAddress;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress(ShippingAddress1 shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public ECommerceOrder1 billingAddress(BillingAddress1 billingAddress) {
    
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BILLING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BillingAddress1 getBillingAddress() {
    return billingAddress;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingAddress(BillingAddress1 billingAddress) {
    this.billingAddress = billingAddress;
  }


  public ECommerceOrder1 promos(List<PromosInner1> promos) {
    
    this.promos = promos;
    return this;
  }

  public ECommerceOrder1 addPromosItem(PromosInner1 promosItem) {
    if (this.promos == null) {
      this.promos = new ArrayList<>();
    }
    this.promos.add(promosItem);
    return this;
  }

   /**
   * The promo codes applied on the order
   * @return promos
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROMOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PromosInner1> getPromos() {
    return promos;
  }


  @JsonProperty(JSON_PROPERTY_PROMOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPromos(List<PromosInner1> promos) {
    this.promos = promos;
  }


  public ECommerceOrder1 lines(List<ECommerceOrderLineItem1> lines) {
    
    this.lines = lines;
    return this;
  }

  public ECommerceOrder1 addLinesItem(ECommerceOrderLineItem1 linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * An array of the order&#39;s line items.
   * @return lines
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ECommerceOrderLineItem1> getLines() {
    return lines;
  }


  @JsonProperty(JSON_PROPERTY_LINES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLines(List<ECommerceOrderLineItem1> lines) {
    this.lines = lines;
  }


  public ECommerceOrder1 outreach(Outreach1 outreach) {
    
    this.outreach = outreach;
    return this;
  }

   /**
   * Get outreach
   * @return outreach
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTREACH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Outreach1 getOutreach() {
    return outreach;
  }


  @JsonProperty(JSON_PROPERTY_OUTREACH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutreach(Outreach1 outreach) {
    this.outreach = outreach;
  }


  public ECommerceOrder1 trackingNumber(String trackingNumber) {
    
    this.trackingNumber = trackingNumber;
    return this;
  }

   /**
   * The tracking number associated with the order.
   * @return trackingNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACKING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTrackingNumber() {
    return trackingNumber;
  }


  @JsonProperty(JSON_PROPERTY_TRACKING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }


  public ECommerceOrder1 trackingCarrier(String trackingCarrier) {
    
    this.trackingCarrier = trackingCarrier;
    return this;
  }

   /**
   * The tracking carrier associated with the order.
   * @return trackingCarrier
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACKING_CARRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTrackingCarrier() {
    return trackingCarrier;
  }


  @JsonProperty(JSON_PROPERTY_TRACKING_CARRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackingCarrier(String trackingCarrier) {
    this.trackingCarrier = trackingCarrier;
  }


  public ECommerceOrder1 trackingUrl(String trackingUrl) {
    
    this.trackingUrl = trackingUrl;
    return this;
  }

   /**
   * The tracking URL associated with the order.
   * @return trackingUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACKING_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTrackingUrl() {
    return trackingUrl;
  }


  @JsonProperty(JSON_PROPERTY_TRACKING_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECommerceOrder1 eCommerceOrder1 = (ECommerceOrder1) o;
    return Objects.equals(this.id, eCommerceOrder1.id) &&
        Objects.equals(this.customer, eCommerceOrder1.customer) &&
        Objects.equals(this.campaignId, eCommerceOrder1.campaignId) &&
        Objects.equals(this.landingSite, eCommerceOrder1.landingSite) &&
        Objects.equals(this.financialStatus, eCommerceOrder1.financialStatus) &&
        Objects.equals(this.fulfillmentStatus, eCommerceOrder1.fulfillmentStatus) &&
        Objects.equals(this.currencyCode, eCommerceOrder1.currencyCode) &&
        Objects.equals(this.orderTotal, eCommerceOrder1.orderTotal) &&
        Objects.equals(this.orderUrl, eCommerceOrder1.orderUrl) &&
        Objects.equals(this.discountTotal, eCommerceOrder1.discountTotal) &&
        Objects.equals(this.taxTotal, eCommerceOrder1.taxTotal) &&
        Objects.equals(this.shippingTotal, eCommerceOrder1.shippingTotal) &&
        Objects.equals(this.trackingCode, eCommerceOrder1.trackingCode) &&
        Objects.equals(this.processedAtForeign, eCommerceOrder1.processedAtForeign) &&
        Objects.equals(this.cancelledAtForeign, eCommerceOrder1.cancelledAtForeign) &&
        Objects.equals(this.updatedAtForeign, eCommerceOrder1.updatedAtForeign) &&
        Objects.equals(this.shippingAddress, eCommerceOrder1.shippingAddress) &&
        Objects.equals(this.billingAddress, eCommerceOrder1.billingAddress) &&
        Objects.equals(this.promos, eCommerceOrder1.promos) &&
        Objects.equals(this.lines, eCommerceOrder1.lines) &&
        Objects.equals(this.outreach, eCommerceOrder1.outreach) &&
        Objects.equals(this.trackingNumber, eCommerceOrder1.trackingNumber) &&
        Objects.equals(this.trackingCarrier, eCommerceOrder1.trackingCarrier) &&
        Objects.equals(this.trackingUrl, eCommerceOrder1.trackingUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, customer, campaignId, landingSite, financialStatus, fulfillmentStatus, currencyCode, orderTotal, orderUrl, discountTotal, taxTotal, shippingTotal, trackingCode, processedAtForeign, cancelledAtForeign, updatedAtForeign, shippingAddress, billingAddress, promos, lines, outreach, trackingNumber, trackingCarrier, trackingUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECommerceOrder1 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    landingSite: ").append(toIndentedString(landingSite)).append("\n");
    sb.append("    financialStatus: ").append(toIndentedString(financialStatus)).append("\n");
    sb.append("    fulfillmentStatus: ").append(toIndentedString(fulfillmentStatus)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    orderTotal: ").append(toIndentedString(orderTotal)).append("\n");
    sb.append("    orderUrl: ").append(toIndentedString(orderUrl)).append("\n");
    sb.append("    discountTotal: ").append(toIndentedString(discountTotal)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    shippingTotal: ").append(toIndentedString(shippingTotal)).append("\n");
    sb.append("    trackingCode: ").append(toIndentedString(trackingCode)).append("\n");
    sb.append("    processedAtForeign: ").append(toIndentedString(processedAtForeign)).append("\n");
    sb.append("    cancelledAtForeign: ").append(toIndentedString(cancelledAtForeign)).append("\n");
    sb.append("    updatedAtForeign: ").append(toIndentedString(updatedAtForeign)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    promos: ").append(toIndentedString(promos)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    outreach: ").append(toIndentedString(outreach)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    trackingCarrier: ").append(toIndentedString(trackingCarrier)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

