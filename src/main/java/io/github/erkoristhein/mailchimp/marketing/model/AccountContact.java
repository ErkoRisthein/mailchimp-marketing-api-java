/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information about the account contact.
 */
@JsonPropertyOrder({
  AccountContact.JSON_PROPERTY_COMPANY,
  AccountContact.JSON_PROPERTY_ADDR1,
  AccountContact.JSON_PROPERTY_ADDR2,
  AccountContact.JSON_PROPERTY_CITY,
  AccountContact.JSON_PROPERTY_STATE,
  AccountContact.JSON_PROPERTY_ZIP,
  AccountContact.JSON_PROPERTY_COUNTRY
})
@JsonTypeName("Account_Contact")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class AccountContact {
  public static final String JSON_PROPERTY_COMPANY = "company";
  private String company;

  public static final String JSON_PROPERTY_ADDR1 = "addr1";
  private String addr1;

  public static final String JSON_PROPERTY_ADDR2 = "addr2";
  private String addr2;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_ZIP = "zip";
  private String zip;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public AccountContact() {
  }

  @JsonCreator
  public AccountContact(
    @JsonProperty(JSON_PROPERTY_COMPANY) String company, 
    @JsonProperty(JSON_PROPERTY_ADDR1) String addr1, 
    @JsonProperty(JSON_PROPERTY_ADDR2) String addr2, 
    @JsonProperty(JSON_PROPERTY_CITY) String city, 
    @JsonProperty(JSON_PROPERTY_STATE) String state, 
    @JsonProperty(JSON_PROPERTY_ZIP) String zip, 
    @JsonProperty(JSON_PROPERTY_COUNTRY) String country
  ) {
    this();
    this.company = company;
    this.addr1 = addr1;
    this.addr2 = addr2;
    this.city = city;
    this.state = state;
    this.zip = zip;
    this.country = country;
  }

   /**
   * The company name for the account.
   * @return company
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompany() {
    return company;
  }




   /**
   * The street address for the account contact.
   * @return addr1
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDR1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddr1() {
    return addr1;
  }




   /**
   * The street address for the account contact.
   * @return addr2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDR2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddr2() {
    return addr2;
  }




   /**
   * The city for the account contact.
   * @return city
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }




   /**
   * The state for the account contact.
   * @return state
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }




   /**
   * The zip code for the account contact.
   * @return zip
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getZip() {
    return zip;
  }




   /**
   * The country for the account contact.
   * @return country
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountContact accountContact = (AccountContact) o;
    return Objects.equals(this.company, accountContact.company) &&
        Objects.equals(this.addr1, accountContact.addr1) &&
        Objects.equals(this.addr2, accountContact.addr2) &&
        Objects.equals(this.city, accountContact.city) &&
        Objects.equals(this.state, accountContact.state) &&
        Objects.equals(this.zip, accountContact.zip) &&
        Objects.equals(this.country, accountContact.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(company, addr1, addr2, city, state, zip, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountContact {\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    addr1: ").append(toIndentedString(addr1)).append("\n");
    sb.append("    addr2: ").append(toIndentedString(addr2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

