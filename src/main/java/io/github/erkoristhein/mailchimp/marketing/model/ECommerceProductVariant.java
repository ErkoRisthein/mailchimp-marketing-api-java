/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information about a specific product variant.
 */
@JsonPropertyOrder({
  ECommerceProductVariant.JSON_PROPERTY_ID,
  ECommerceProductVariant.JSON_PROPERTY_TITLE,
  ECommerceProductVariant.JSON_PROPERTY_URL,
  ECommerceProductVariant.JSON_PROPERTY_SKU,
  ECommerceProductVariant.JSON_PROPERTY_PRICE,
  ECommerceProductVariant.JSON_PROPERTY_INVENTORY_QUANTITY,
  ECommerceProductVariant.JSON_PROPERTY_IMAGE_URL,
  ECommerceProductVariant.JSON_PROPERTY_BACKORDERS,
  ECommerceProductVariant.JSON_PROPERTY_VISIBILITY,
  ECommerceProductVariant.JSON_PROPERTY_CREATED_AT,
  ECommerceProductVariant.JSON_PROPERTY_UPDATED_AT,
  ECommerceProductVariant.JSON_PROPERTY_LINKS
})
@JsonTypeName("E_commerce_Product_Variant")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class ECommerceProductVariant {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_SKU = "sku";
  private String sku;

  public static final String JSON_PROPERTY_PRICE = "price";
  private BigDecimal price;

  public static final String JSON_PROPERTY_INVENTORY_QUANTITY = "inventory_quantity";
  private Integer inventoryQuantity;

  public static final String JSON_PROPERTY_IMAGE_URL = "image_url";
  private String imageUrl;

  public static final String JSON_PROPERTY_BACKORDERS = "backorders";
  private String backorders;

  public static final String JSON_PROPERTY_VISIBILITY = "visibility";
  private String visibility;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links = new ArrayList<>();

  public ECommerceProductVariant() {
  }

  @JsonCreator
  public ECommerceProductVariant(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.links = links;
  }

   /**
   * A unique identifier for the product variant.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




  public ECommerceProductVariant title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title of a product variant.
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public ECommerceProductVariant url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The URL for a product variant.
   * @return url
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ECommerceProductVariant sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * The stock keeping unit (SKU) of a product variant.
   * @return sku
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSku() {
    return sku;
  }


  @JsonProperty(JSON_PROPERTY_SKU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSku(String sku) {
    this.sku = sku;
  }


  public ECommerceProductVariant price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * The price of a product variant.
   * @return price
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public ECommerceProductVariant inventoryQuantity(Integer inventoryQuantity) {
    
    this.inventoryQuantity = inventoryQuantity;
    return this;
  }

   /**
   * The inventory quantity of a product variant.
   * @return inventoryQuantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVENTORY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInventoryQuantity() {
    return inventoryQuantity;
  }


  @JsonProperty(JSON_PROPERTY_INVENTORY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInventoryQuantity(Integer inventoryQuantity) {
    this.inventoryQuantity = inventoryQuantity;
  }


  public ECommerceProductVariant imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * The image URL for a product variant.
   * @return imageUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageUrl() {
    return imageUrl;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public ECommerceProductVariant backorders(String backorders) {
    
    this.backorders = backorders;
    return this;
  }

   /**
   * The backorders of a product variant.
   * @return backorders
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BACKORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBackorders() {
    return backorders;
  }


  @JsonProperty(JSON_PROPERTY_BACKORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackorders(String backorders) {
    this.backorders = backorders;
  }


  public ECommerceProductVariant visibility(String visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * The visibility of a product variant.
   * @return visibility
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibility() {
    return visibility;
  }


  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibility(String visibility) {
    this.visibility = visibility;
  }


   /**
   * The date and time the product was created in ISO 8601 format.
   * @return createdAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * The date and time the product was last updated in ISO 8601 format.
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECommerceProductVariant eCommerceProductVariant = (ECommerceProductVariant) o;
    return Objects.equals(this.id, eCommerceProductVariant.id) &&
        Objects.equals(this.title, eCommerceProductVariant.title) &&
        Objects.equals(this.url, eCommerceProductVariant.url) &&
        Objects.equals(this.sku, eCommerceProductVariant.sku) &&
        Objects.equals(this.price, eCommerceProductVariant.price) &&
        Objects.equals(this.inventoryQuantity, eCommerceProductVariant.inventoryQuantity) &&
        Objects.equals(this.imageUrl, eCommerceProductVariant.imageUrl) &&
        Objects.equals(this.backorders, eCommerceProductVariant.backorders) &&
        Objects.equals(this.visibility, eCommerceProductVariant.visibility) &&
        Objects.equals(this.createdAt, eCommerceProductVariant.createdAt) &&
        Objects.equals(this.updatedAt, eCommerceProductVariant.updatedAt) &&
        Objects.equals(this.links, eCommerceProductVariant.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, url, sku, price, inventoryQuantity, imageUrl, backorders, visibility, createdAt, updatedAt, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECommerceProductVariant {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    inventoryQuantity: ").append(toIndentedString(inventoryQuantity)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    backorders: ").append(toIndentedString(backorders)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

