/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An object describing the click activity for the campaign.
 */
@JsonPropertyOrder({
  Clicks.JSON_PROPERTY_CLICKS_TOTAL,
  Clicks.JSON_PROPERTY_UNIQUE_CLICKS,
  Clicks.JSON_PROPERTY_UNIQUE_SUBSCRIBER_CLICKS,
  Clicks.JSON_PROPERTY_CLICK_RATE,
  Clicks.JSON_PROPERTY_LAST_CLICK
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class Clicks {
  public static final String JSON_PROPERTY_CLICKS_TOTAL = "clicks_total";
  private Integer clicksTotal;

  public static final String JSON_PROPERTY_UNIQUE_CLICKS = "unique_clicks";
  private Integer uniqueClicks;

  public static final String JSON_PROPERTY_UNIQUE_SUBSCRIBER_CLICKS = "unique_subscriber_clicks";
  private Integer uniqueSubscriberClicks;

  public static final String JSON_PROPERTY_CLICK_RATE = "click_rate";
  private BigDecimal clickRate;

  public static final String JSON_PROPERTY_LAST_CLICK = "last_click";
  private OffsetDateTime lastClick;

  public Clicks() {
  }

  public Clicks clicksTotal(Integer clicksTotal) {
    
    this.clicksTotal = clicksTotal;
    return this;
  }

   /**
   * The total number of clicks for the campaign.
   * @return clicksTotal
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICKS_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClicksTotal() {
    return clicksTotal;
  }


  @JsonProperty(JSON_PROPERTY_CLICKS_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClicksTotal(Integer clicksTotal) {
    this.clicksTotal = clicksTotal;
  }


  public Clicks uniqueClicks(Integer uniqueClicks) {
    
    this.uniqueClicks = uniqueClicks;
    return this;
  }

   /**
   * The total number of unique clicks for links across a campaign.
   * @return uniqueClicks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUniqueClicks() {
    return uniqueClicks;
  }


  @JsonProperty(JSON_PROPERTY_UNIQUE_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniqueClicks(Integer uniqueClicks) {
    this.uniqueClicks = uniqueClicks;
  }


  public Clicks uniqueSubscriberClicks(Integer uniqueSubscriberClicks) {
    
    this.uniqueSubscriberClicks = uniqueSubscriberClicks;
    return this;
  }

   /**
   * The total number of subscribers who clicked on a campaign.
   * @return uniqueSubscriberClicks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_SUBSCRIBER_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUniqueSubscriberClicks() {
    return uniqueSubscriberClicks;
  }


  @JsonProperty(JSON_PROPERTY_UNIQUE_SUBSCRIBER_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniqueSubscriberClicks(Integer uniqueSubscriberClicks) {
    this.uniqueSubscriberClicks = uniqueSubscriberClicks;
  }


  public Clicks clickRate(BigDecimal clickRate) {
    
    this.clickRate = clickRate;
    return this;
  }

   /**
   * The number of unique clicks divided by the total number of successful deliveries.
   * @return clickRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICK_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getClickRate() {
    return clickRate;
  }


  @JsonProperty(JSON_PROPERTY_CLICK_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClickRate(BigDecimal clickRate) {
    this.clickRate = clickRate;
  }


  public Clicks lastClick(OffsetDateTime lastClick) {
    
    this.lastClick = lastClick;
    return this;
  }

   /**
   * The date and time of the last recorded click for the campaign in ISO 8601 format.
   * @return lastClick
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_CLICK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastClick() {
    return lastClick;
  }


  @JsonProperty(JSON_PROPERTY_LAST_CLICK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastClick(OffsetDateTime lastClick) {
    this.lastClick = lastClick;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Clicks clicks = (Clicks) o;
    return Objects.equals(this.clicksTotal, clicks.clicksTotal) &&
        Objects.equals(this.uniqueClicks, clicks.uniqueClicks) &&
        Objects.equals(this.uniqueSubscriberClicks, clicks.uniqueSubscriberClicks) &&
        Objects.equals(this.clickRate, clicks.clickRate) &&
        Objects.equals(this.lastClick, clicks.lastClick);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clicksTotal, uniqueClicks, uniqueSubscriberClicks, clickRate, lastClick);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Clicks {\n");
    sb.append("    clicksTotal: ").append(toIndentedString(clicksTotal)).append("\n");
    sb.append("    uniqueClicks: ").append(toIndentedString(uniqueClicks)).append("\n");
    sb.append("    uniqueSubscriberClicks: ").append(toIndentedString(uniqueSubscriberClicks)).append("\n");
    sb.append("    clickRate: ").append(toIndentedString(clickRate)).append("\n");
    sb.append("    lastClick: ").append(toIndentedString(lastClick)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

