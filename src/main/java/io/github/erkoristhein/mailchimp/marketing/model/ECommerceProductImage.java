/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information about a specific product image.
 */
@JsonPropertyOrder({
  ECommerceProductImage.JSON_PROPERTY_ID,
  ECommerceProductImage.JSON_PROPERTY_URL,
  ECommerceProductImage.JSON_PROPERTY_VARIANT_IDS,
  ECommerceProductImage.JSON_PROPERTY_LINKS
})
@JsonTypeName("E_commerce_Product_Image")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class ECommerceProductImage {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_VARIANT_IDS = "variant_ids";
  private List<String> variantIds;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links;

  public ECommerceProductImage() {
  }

  @JsonCreator
  public ECommerceProductImage(
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.links = links;
  }

  public ECommerceProductImage id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * A unique identifier for the product image.
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ECommerceProductImage url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The URL for a product image.
   * @return url
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ECommerceProductImage variantIds(List<String> variantIds) {
    
    this.variantIds = variantIds;
    return this;
  }

  public ECommerceProductImage addVariantIdsItem(String variantIdsItem) {
    if (this.variantIds == null) {
      this.variantIds = new ArrayList<>();
    }
    this.variantIds.add(variantIdsItem);
    return this;
  }

   /**
   * The list of product variants using the image.
   * @return variantIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VARIANT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getVariantIds() {
    return variantIds;
  }


  @JsonProperty(JSON_PROPERTY_VARIANT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariantIds(List<String> variantIds) {
    this.variantIds = variantIds;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECommerceProductImage eCommerceProductImage = (ECommerceProductImage) o;
    return Objects.equals(this.id, eCommerceProductImage.id) &&
        Objects.equals(this.url, eCommerceProductImage.url) &&
        Objects.equals(this.variantIds, eCommerceProductImage.variantIds) &&
        Objects.equals(this.links, eCommerceProductImage.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, variantIds, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECommerceProductImage {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    variantIds: ").append(toIndentedString(variantIds)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

