/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information about a specific order line.
 */
@JsonPropertyOrder({
  ECommerceOrderLineItem2.JSON_PROPERTY_PRODUCT_ID,
  ECommerceOrderLineItem2.JSON_PROPERTY_PRODUCT_VARIANT_ID,
  ECommerceOrderLineItem2.JSON_PROPERTY_QUANTITY,
  ECommerceOrderLineItem2.JSON_PROPERTY_PRICE,
  ECommerceOrderLineItem2.JSON_PROPERTY_DISCOUNT
})
@JsonTypeName("E_commerce_Order_Line_Item_2")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class ECommerceOrderLineItem2 {
  public static final String JSON_PROPERTY_PRODUCT_ID = "product_id";
  private String productId;

  public static final String JSON_PROPERTY_PRODUCT_VARIANT_ID = "product_variant_id";
  private String productVariantId;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_PRICE = "price";
  private BigDecimal price;

  public static final String JSON_PROPERTY_DISCOUNT = "discount";
  private BigDecimal discount;

  public ECommerceOrderLineItem2() {
  }

  public ECommerceOrderLineItem2 productId(String productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * A unique identifier for the product associated with the order line item.
   * @return productId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductId() {
    return productId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductId(String productId) {
    this.productId = productId;
  }


  public ECommerceOrderLineItem2 productVariantId(String productVariantId) {
    
    this.productVariantId = productVariantId;
    return this;
  }

   /**
   * A unique identifier for the product variant associated with the order line item.
   * @return productVariantId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_VARIANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductVariantId() {
    return productVariantId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_VARIANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductVariantId(String productVariantId) {
    this.productVariantId = productVariantId;
  }


  public ECommerceOrderLineItem2 quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * The quantity of an order line item.
   * @return quantity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public ECommerceOrderLineItem2 price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * The price of an order line item.
   * @return price
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public ECommerceOrderLineItem2 discount(BigDecimal discount) {
    
    this.discount = discount;
    return this;
  }

   /**
   * The total discount amount applied to this line item.
   * @return discount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDiscount() {
    return discount;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscount(BigDecimal discount) {
    this.discount = discount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECommerceOrderLineItem2 eCommerceOrderLineItem2 = (ECommerceOrderLineItem2) o;
    return Objects.equals(this.productId, eCommerceOrderLineItem2.productId) &&
        Objects.equals(this.productVariantId, eCommerceOrderLineItem2.productVariantId) &&
        Objects.equals(this.quantity, eCommerceOrderLineItem2.quantity) &&
        Objects.equals(this.price, eCommerceOrderLineItem2.price) &&
        Objects.equals(this.discount, eCommerceOrderLineItem2.discount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, productVariantId, quantity, price, discount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECommerceOrderLineItem2 {\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productVariantId: ").append(toIndentedString(productVariantId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

