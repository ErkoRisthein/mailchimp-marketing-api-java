/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.Contact;
import io.github.erkoristhein.mailchimp.marketing.model.Response;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A single survey response.
 */
@JsonPropertyOrder({
  SurveyResponse.JSON_PROPERTY_RESPONSE_ID,
  SurveyResponse.JSON_PROPERTY_SUBMITTED_AT,
  SurveyResponse.JSON_PROPERTY_CONTACT,
  SurveyResponse.JSON_PROPERTY_IS_NEW_CONTACT,
  SurveyResponse.JSON_PROPERTY_RESULTS
})
@JsonTypeName("Survey_Response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class SurveyResponse {
  public static final String JSON_PROPERTY_RESPONSE_ID = "response_id";
  private String responseId;

  public static final String JSON_PROPERTY_SUBMITTED_AT = "submitted_at";
  private OffsetDateTime submittedAt;

  public static final String JSON_PROPERTY_CONTACT = "contact";
  private Contact contact;

  public static final String JSON_PROPERTY_IS_NEW_CONTACT = "is_new_contact";
  private Boolean isNewContact;

  public static final String JSON_PROPERTY_RESULTS = "results";
  private List<Response> results;

  public SurveyResponse() {
  }

  @JsonCreator
  public SurveyResponse(
    @JsonProperty(JSON_PROPERTY_RESPONSE_ID) String responseId, 
    @JsonProperty(JSON_PROPERTY_SUBMITTED_AT) OffsetDateTime submittedAt
  ) {
    this();
    this.responseId = responseId;
    this.submittedAt = submittedAt;
  }

   /**
   * The ID for the survey response.
   * @return responseId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseId() {
    return responseId;
  }




   /**
   * The date and time when the survey response was submitted in ISO 8601 format.
   * @return submittedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMITTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSubmittedAt() {
    return submittedAt;
  }




  public SurveyResponse contact(Contact contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Contact getContact() {
    return contact;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact(Contact contact) {
    this.contact = contact;
  }


  public SurveyResponse isNewContact(Boolean isNewContact) {
    
    this.isNewContact = isNewContact;
    return this;
  }

   /**
   * If this contact was added to the Mailchimp audience via this survey.
   * @return isNewContact
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_NEW_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsNewContact() {
    return isNewContact;
  }


  @JsonProperty(JSON_PROPERTY_IS_NEW_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsNewContact(Boolean isNewContact) {
    this.isNewContact = isNewContact;
  }


  public SurveyResponse results(List<Response> results) {
    
    this.results = results;
    return this;
  }

  public SurveyResponse addResultsItem(Response resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * The survey questions and the answers to those questions.
   * @return results
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Response> getResults() {
    return results;
  }


  @JsonProperty(JSON_PROPERTY_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResults(List<Response> results) {
    this.results = results;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SurveyResponse surveyResponse = (SurveyResponse) o;
    return Objects.equals(this.responseId, surveyResponse.responseId) &&
        Objects.equals(this.submittedAt, surveyResponse.submittedAt) &&
        Objects.equals(this.contact, surveyResponse.contact) &&
        Objects.equals(this.isNewContact, surveyResponse.isNewContact) &&
        Objects.equals(this.results, surveyResponse.results);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseId, submittedAt, contact, isNewContact, results);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SurveyResponse {\n");
    sb.append("    responseId: ").append(toIndentedString(responseId)).append("\n");
    sb.append("    submittedAt: ").append(toIndentedString(submittedAt)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    isNewContact: ").append(toIndentedString(isNewContact)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

