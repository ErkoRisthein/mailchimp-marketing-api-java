/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ErrorsInner1;
import io.github.erkoristhein.mailchimp.marketing.model.ListMembers;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Batch add/remove List members to/from static segment
 */
@JsonPropertyOrder({
  BatchAddRemoveListMembersToFromStaticSegment.JSON_PROPERTY_MEMBERS_ADDED,
  BatchAddRemoveListMembersToFromStaticSegment.JSON_PROPERTY_MEMBERS_REMOVED,
  BatchAddRemoveListMembersToFromStaticSegment.JSON_PROPERTY_ERRORS,
  BatchAddRemoveListMembersToFromStaticSegment.JSON_PROPERTY_TOTAL_ADDED,
  BatchAddRemoveListMembersToFromStaticSegment.JSON_PROPERTY_TOTAL_REMOVED,
  BatchAddRemoveListMembersToFromStaticSegment.JSON_PROPERTY_ERROR_COUNT,
  BatchAddRemoveListMembersToFromStaticSegment.JSON_PROPERTY_LINKS
})
@JsonTypeName("Batch_add_remove_List_members_to_from_static_segment")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class BatchAddRemoveListMembersToFromStaticSegment {
  public static final String JSON_PROPERTY_MEMBERS_ADDED = "members_added";
  private List<ListMembers> membersAdded = new ArrayList<>();

  public static final String JSON_PROPERTY_MEMBERS_REMOVED = "members_removed";
  private List<ListMembers> membersRemoved = new ArrayList<>();

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private List<ErrorsInner1> errors = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTAL_ADDED = "total_added";
  private Integer totalAdded;

  public static final String JSON_PROPERTY_TOTAL_REMOVED = "total_removed";
  private Integer totalRemoved;

  public static final String JSON_PROPERTY_ERROR_COUNT = "error_count";
  private Integer errorCount;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links = new ArrayList<>();

  public BatchAddRemoveListMembersToFromStaticSegment() {
  }

  @JsonCreator
  public BatchAddRemoveListMembersToFromStaticSegment(
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.links = links;
  }

  public BatchAddRemoveListMembersToFromStaticSegment membersAdded(List<ListMembers> membersAdded) {
    
    this.membersAdded = membersAdded;
    return this;
  }

  public BatchAddRemoveListMembersToFromStaticSegment addMembersAddedItem(ListMembers membersAddedItem) {
    if (this.membersAdded == null) {
      this.membersAdded = new ArrayList<>();
    }
    this.membersAdded.add(membersAddedItem);
    return this;
  }

   /**
   * An array of objects, each representing a new member that was added to the static segment.
   * @return membersAdded
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMBERS_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ListMembers> getMembersAdded() {
    return membersAdded;
  }


  @JsonProperty(JSON_PROPERTY_MEMBERS_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMembersAdded(List<ListMembers> membersAdded) {
    this.membersAdded = membersAdded;
  }


  public BatchAddRemoveListMembersToFromStaticSegment membersRemoved(List<ListMembers> membersRemoved) {
    
    this.membersRemoved = membersRemoved;
    return this;
  }

  public BatchAddRemoveListMembersToFromStaticSegment addMembersRemovedItem(ListMembers membersRemovedItem) {
    if (this.membersRemoved == null) {
      this.membersRemoved = new ArrayList<>();
    }
    this.membersRemoved.add(membersRemovedItem);
    return this;
  }

   /**
   * An array of objects, each representing an existing list member that got deleted from the static segment.
   * @return membersRemoved
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMBERS_REMOVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ListMembers> getMembersRemoved() {
    return membersRemoved;
  }


  @JsonProperty(JSON_PROPERTY_MEMBERS_REMOVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMembersRemoved(List<ListMembers> membersRemoved) {
    this.membersRemoved = membersRemoved;
  }


  public BatchAddRemoveListMembersToFromStaticSegment errors(List<ErrorsInner1> errors) {
    
    this.errors = errors;
    return this;
  }

  public BatchAddRemoveListMembersToFromStaticSegment addErrorsItem(ErrorsInner1 errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * An array of objects, each representing an array of email addresses that could not be added to the segment or removed and an error message providing more details.
   * @return errors
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ErrorsInner1> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrors(List<ErrorsInner1> errors) {
    this.errors = errors;
  }


  public BatchAddRemoveListMembersToFromStaticSegment totalAdded(Integer totalAdded) {
    
    this.totalAdded = totalAdded;
    return this;
  }

   /**
   * The total number of items matching the query, irrespective of pagination.
   * @return totalAdded
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalAdded() {
    return totalAdded;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAdded(Integer totalAdded) {
    this.totalAdded = totalAdded;
  }


  public BatchAddRemoveListMembersToFromStaticSegment totalRemoved(Integer totalRemoved) {
    
    this.totalRemoved = totalRemoved;
    return this;
  }

   /**
   * The total number of items matching the query, irrespective of pagination.
   * @return totalRemoved
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_REMOVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalRemoved() {
    return totalRemoved;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_REMOVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalRemoved(Integer totalRemoved) {
    this.totalRemoved = totalRemoved;
  }


  public BatchAddRemoveListMembersToFromStaticSegment errorCount(Integer errorCount) {
    
    this.errorCount = errorCount;
    return this;
  }

   /**
   * The total number of items matching the query, irrespective of pagination.
   * @return errorCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getErrorCount() {
    return errorCount;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCount(Integer errorCount) {
    this.errorCount = errorCount;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchAddRemoveListMembersToFromStaticSegment batchAddRemoveListMembersToFromStaticSegment = (BatchAddRemoveListMembersToFromStaticSegment) o;
    return Objects.equals(this.membersAdded, batchAddRemoveListMembersToFromStaticSegment.membersAdded) &&
        Objects.equals(this.membersRemoved, batchAddRemoveListMembersToFromStaticSegment.membersRemoved) &&
        Objects.equals(this.errors, batchAddRemoveListMembersToFromStaticSegment.errors) &&
        Objects.equals(this.totalAdded, batchAddRemoveListMembersToFromStaticSegment.totalAdded) &&
        Objects.equals(this.totalRemoved, batchAddRemoveListMembersToFromStaticSegment.totalRemoved) &&
        Objects.equals(this.errorCount, batchAddRemoveListMembersToFromStaticSegment.errorCount) &&
        Objects.equals(this.links, batchAddRemoveListMembersToFromStaticSegment.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(membersAdded, membersRemoved, errors, totalAdded, totalRemoved, errorCount, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchAddRemoveListMembersToFromStaticSegment {\n");
    sb.append("    membersAdded: ").append(toIndentedString(membersAdded)).append("\n");
    sb.append("    membersRemoved: ").append(toIndentedString(membersRemoved)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    totalAdded: ").append(toIndentedString(totalAdded)).append("\n");
    sb.append("    totalRemoved: ").append(toIndentedString(totalRemoved)).append("\n");
    sb.append("    errorCount: ").append(toIndentedString(errorCount)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

