/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Updates on campaigns in the process of sending.
 */
@JsonPropertyOrder({
  CampaignDeliveryStatus.JSON_PROPERTY_ENABLED,
  CampaignDeliveryStatus.JSON_PROPERTY_CAN_CANCEL,
  CampaignDeliveryStatus.JSON_PROPERTY_STATUS,
  CampaignDeliveryStatus.JSON_PROPERTY_EMAILS_SENT,
  CampaignDeliveryStatus.JSON_PROPERTY_EMAILS_CANCELED
})
@JsonTypeName("Campaign_Delivery_Status")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class CampaignDeliveryStatus {
  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_CAN_CANCEL = "can_cancel";
  private Boolean canCancel;

  /**
   * The current state of a campaign delivery.
   */
  public enum StatusEnum {
    DELIVERING("delivering"),
    
    DELIVERED("delivered"),
    
    CANCELING("canceling"),
    
    CANCELED("canceled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_EMAILS_SENT = "emails_sent";
  private Integer emailsSent;

  public static final String JSON_PROPERTY_EMAILS_CANCELED = "emails_canceled";
  private Integer emailsCanceled;

  public CampaignDeliveryStatus() {
  }

  @JsonCreator
  public CampaignDeliveryStatus(
    @JsonProperty(JSON_PROPERTY_ENABLED) Boolean enabled, 
    @JsonProperty(JSON_PROPERTY_CAN_CANCEL) Boolean canCancel, 
    @JsonProperty(JSON_PROPERTY_STATUS) StatusEnum status, 
    @JsonProperty(JSON_PROPERTY_EMAILS_SENT) Integer emailsSent, 
    @JsonProperty(JSON_PROPERTY_EMAILS_CANCELED) Integer emailsCanceled
  ) {
    this();
    this.enabled = enabled;
    this.canCancel = canCancel;
    this.status = status;
    this.emailsSent = emailsSent;
    this.emailsCanceled = emailsCanceled;
  }

   /**
   * Whether Campaign Delivery Status is enabled for this account and campaign.
   * @return enabled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }




   /**
   * Whether a campaign send can be canceled.
   * @return canCancel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAN_CANCEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanCancel() {
    return canCancel;
  }




   /**
   * The current state of a campaign delivery.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }




   /**
   * The total number of emails confirmed sent for this campaign so far.
   * @return emailsSent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAILS_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEmailsSent() {
    return emailsSent;
  }




   /**
   * The total number of emails canceled for this campaign.
   * @return emailsCanceled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAILS_CANCELED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEmailsCanceled() {
    return emailsCanceled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignDeliveryStatus campaignDeliveryStatus = (CampaignDeliveryStatus) o;
    return Objects.equals(this.enabled, campaignDeliveryStatus.enabled) &&
        Objects.equals(this.canCancel, campaignDeliveryStatus.canCancel) &&
        Objects.equals(this.status, campaignDeliveryStatus.status) &&
        Objects.equals(this.emailsSent, campaignDeliveryStatus.emailsSent) &&
        Objects.equals(this.emailsCanceled, campaignDeliveryStatus.emailsCanceled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, canCancel, status, emailsSent, emailsCanceled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignDeliveryStatus {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    canCancel: ").append(toIndentedString(canCancel)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    emailsSent: ").append(toIndentedString(emailsSent)).append("\n");
    sb.append("    emailsCanceled: ").append(toIndentedString(emailsCanceled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

