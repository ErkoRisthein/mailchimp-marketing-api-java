/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Stats for Group B.
 */
@JsonPropertyOrder({
  GroupB.JSON_PROPERTY_TOTAL_CLICKS_B,
  GroupB.JSON_PROPERTY_CLICK_PERCENTAGE_B,
  GroupB.JSON_PROPERTY_UNIQUE_CLICKS_B,
  GroupB.JSON_PROPERTY_UNIQUE_CLICK_PERCENTAGE_B
})
@JsonTypeName("Group_B")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class GroupB {
  public static final String JSON_PROPERTY_TOTAL_CLICKS_B = "total_clicks_b";
  private Integer totalClicksB;

  public static final String JSON_PROPERTY_CLICK_PERCENTAGE_B = "click_percentage_b";
  private BigDecimal clickPercentageB;

  public static final String JSON_PROPERTY_UNIQUE_CLICKS_B = "unique_clicks_b";
  private Integer uniqueClicksB;

  public static final String JSON_PROPERTY_UNIQUE_CLICK_PERCENTAGE_B = "unique_click_percentage_b";
  private BigDecimal uniqueClickPercentageB;

  public GroupB() {
  }

  @JsonCreator
  public GroupB(
    @JsonProperty(JSON_PROPERTY_TOTAL_CLICKS_B) Integer totalClicksB, 
    @JsonProperty(JSON_PROPERTY_CLICK_PERCENTAGE_B) BigDecimal clickPercentageB, 
    @JsonProperty(JSON_PROPERTY_UNIQUE_CLICKS_B) Integer uniqueClicksB, 
    @JsonProperty(JSON_PROPERTY_UNIQUE_CLICK_PERCENTAGE_B) BigDecimal uniqueClickPercentageB
  ) {
    this();
    this.totalClicksB = totalClicksB;
    this.clickPercentageB = clickPercentageB;
    this.uniqueClicksB = uniqueClicksB;
    this.uniqueClickPercentageB = uniqueClickPercentageB;
  }

   /**
   * The total number of clicks for Group B.
   * @return totalClicksB
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_CLICKS_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalClicksB() {
    return totalClicksB;
  }




   /**
   * The percentage of total clicks for Group B.
   * @return clickPercentageB
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICK_PERCENTAGE_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getClickPercentageB() {
    return clickPercentageB;
  }




   /**
   * The number of unique clicks for Group B.
   * @return uniqueClicksB
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_CLICKS_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUniqueClicksB() {
    return uniqueClicksB;
  }




   /**
   * The percentage of unique clicks for Group B.
   * @return uniqueClickPercentageB
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_CLICK_PERCENTAGE_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUniqueClickPercentageB() {
    return uniqueClickPercentageB;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupB groupB = (GroupB) o;
    return Objects.equals(this.totalClicksB, groupB.totalClicksB) &&
        Objects.equals(this.clickPercentageB, groupB.clickPercentageB) &&
        Objects.equals(this.uniqueClicksB, groupB.uniqueClicksB) &&
        Objects.equals(this.uniqueClickPercentageB, groupB.uniqueClickPercentageB);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalClicksB, clickPercentageB, uniqueClicksB, uniqueClickPercentageB);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupB {\n");
    sb.append("    totalClicksB: ").append(toIndentedString(totalClicksB)).append("\n");
    sb.append("    clickPercentageB: ").append(toIndentedString(clickPercentageB)).append("\n");
    sb.append("    uniqueClicksB: ").append(toIndentedString(uniqueClicksB)).append("\n");
    sb.append("    uniqueClickPercentageB: ").append(toIndentedString(uniqueClickPercentageB)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

