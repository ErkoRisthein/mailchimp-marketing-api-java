/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information about an Ecommerce Store&#39;s specific Promo Rule
 */
@JsonPropertyOrder({
  ECommercePromoRule.JSON_PROPERTY_ID,
  ECommercePromoRule.JSON_PROPERTY_TITLE,
  ECommercePromoRule.JSON_PROPERTY_DESCRIPTION,
  ECommercePromoRule.JSON_PROPERTY_STARTS_AT,
  ECommercePromoRule.JSON_PROPERTY_ENDS_AT,
  ECommercePromoRule.JSON_PROPERTY_AMOUNT,
  ECommercePromoRule.JSON_PROPERTY_TYPE,
  ECommercePromoRule.JSON_PROPERTY_TARGET,
  ECommercePromoRule.JSON_PROPERTY_ENABLED,
  ECommercePromoRule.JSON_PROPERTY_CREATED_AT_FOREIGN,
  ECommercePromoRule.JSON_PROPERTY_UPDATED_AT_FOREIGN,
  ECommercePromoRule.JSON_PROPERTY_LINKS
})
@JsonTypeName("E_commerce_Promo_Rule")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class ECommercePromoRule {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_STARTS_AT = "starts_at";
  private OffsetDateTime startsAt;

  public static final String JSON_PROPERTY_ENDS_AT = "ends_at";
  private String endsAt;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Float amount;

  /**
   * Type of discount. For free shipping set type to fixed.
   */
  public enum TypeEnum {
    FIXED("fixed"),
    
    PERCENTAGE("percentage");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * The target that the discount applies to.
   */
  public enum TargetEnum {
    PER_ITEM("per_item"),
    
    TOTAL("total"),
    
    SHIPPING("shipping");

    private String value;

    TargetEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TargetEnum fromValue(String value) {
      for (TargetEnum b : TargetEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TARGET = "target";
  private TargetEnum target;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_CREATED_AT_FOREIGN = "created_at_foreign";
  private OffsetDateTime createdAtForeign;

  public static final String JSON_PROPERTY_UPDATED_AT_FOREIGN = "updated_at_foreign";
  private OffsetDateTime updatedAtForeign;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links = new ArrayList<>();

  public ECommercePromoRule() {
  }

  @JsonCreator
  public ECommercePromoRule(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.links = links;
  }

   /**
   * A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




  public ECommercePromoRule title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public ECommercePromoRule description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of a promotion restricted to UTF-8 characters with max length 255.
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ECommercePromoRule startsAt(OffsetDateTime startsAt) {
    
    this.startsAt = startsAt;
    return this;
  }

   /**
   * The date and time when the promotion is in effect in ISO 8601 format.
   * @return startsAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTS_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartsAt() {
    return startsAt;
  }


  @JsonProperty(JSON_PROPERTY_STARTS_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartsAt(OffsetDateTime startsAt) {
    this.startsAt = startsAt;
  }


  public ECommercePromoRule endsAt(String endsAt) {
    
    this.endsAt = endsAt;
    return this;
  }

   /**
   * The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
   * @return endsAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDS_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndsAt() {
    return endsAt;
  }


  @JsonProperty(JSON_PROPERTY_ENDS_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndsAt(String endsAt) {
    this.endsAt = endsAt;
  }


  public ECommercePromoRule amount(Float amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The amount of the promo code discount. If &#39;type&#39; is &#39;fixed&#39;, the amount is treated as a monetary value. If &#39;type&#39; is &#39;percentage&#39;, amount must be a decimal value between 0.0 and 1.0, inclusive.
   * @return amount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(Float amount) {
    this.amount = amount;
  }


  public ECommercePromoRule type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of discount. For free shipping set type to fixed.
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ECommercePromoRule target(TargetEnum target) {
    
    this.target = target;
    return this;
  }

   /**
   * The target that the discount applies to.
   * @return target
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TargetEnum getTarget() {
    return target;
  }


  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTarget(TargetEnum target) {
    this.target = target;
  }


  public ECommercePromoRule enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Whether the promo rule is currently enabled.
   * @return enabled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ECommercePromoRule createdAtForeign(OffsetDateTime createdAtForeign) {
    
    this.createdAtForeign = createdAtForeign;
    return this;
  }

   /**
   * The date and time the promotion was created in ISO 8601 format.
   * @return createdAtForeign
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAtForeign() {
    return createdAtForeign;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAtForeign(OffsetDateTime createdAtForeign) {
    this.createdAtForeign = createdAtForeign;
  }


  public ECommercePromoRule updatedAtForeign(OffsetDateTime updatedAtForeign) {
    
    this.updatedAtForeign = updatedAtForeign;
    return this;
  }

   /**
   * The date and time the promotion was updated in ISO 8601 format.
   * @return updatedAtForeign
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAtForeign() {
    return updatedAtForeign;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAtForeign(OffsetDateTime updatedAtForeign) {
    this.updatedAtForeign = updatedAtForeign;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECommercePromoRule eCommercePromoRule = (ECommercePromoRule) o;
    return Objects.equals(this.id, eCommercePromoRule.id) &&
        Objects.equals(this.title, eCommercePromoRule.title) &&
        Objects.equals(this.description, eCommercePromoRule.description) &&
        Objects.equals(this.startsAt, eCommercePromoRule.startsAt) &&
        Objects.equals(this.endsAt, eCommercePromoRule.endsAt) &&
        Objects.equals(this.amount, eCommercePromoRule.amount) &&
        Objects.equals(this.type, eCommercePromoRule.type) &&
        Objects.equals(this.target, eCommercePromoRule.target) &&
        Objects.equals(this.enabled, eCommercePromoRule.enabled) &&
        Objects.equals(this.createdAtForeign, eCommercePromoRule.createdAtForeign) &&
        Objects.equals(this.updatedAtForeign, eCommercePromoRule.updatedAtForeign) &&
        Objects.equals(this.links, eCommercePromoRule.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, startsAt, endsAt, amount, type, target, enabled, createdAtForeign, updatedAtForeign, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECommercePromoRule {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startsAt: ").append(toIndentedString(startsAt)).append("\n");
    sb.append("    endsAt: ").append(toIndentedString(endsAt)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    createdAtForeign: ").append(toIndentedString(createdAtForeign)).append("\n");
    sb.append("    updatedAtForeign: ").append(toIndentedString(updatedAtForeign)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

