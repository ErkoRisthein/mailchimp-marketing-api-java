/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.Script1;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The Connected Site associated with the store.
 */
@JsonPropertyOrder({
  ConnectedSite2.JSON_PROPERTY_SITE_FOREIGN_ID,
  ConnectedSite2.JSON_PROPERTY_SITE_SCRIPT
})
@JsonTypeName("Connected_Site_2")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class ConnectedSite2 {
  public static final String JSON_PROPERTY_SITE_FOREIGN_ID = "site_foreign_id";
  private String siteForeignId;

  public static final String JSON_PROPERTY_SITE_SCRIPT = "site_script";
  private Script1 siteScript;

  public ConnectedSite2() {
  }

  @JsonCreator
  public ConnectedSite2(
    @JsonProperty(JSON_PROPERTY_SITE_FOREIGN_ID) String siteForeignId
  ) {
    this();
    this.siteForeignId = siteForeignId;
  }

   /**
   * The unique identifier for the connected site.
   * @return siteForeignId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SITE_FOREIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSiteForeignId() {
    return siteForeignId;
  }




  public ConnectedSite2 siteScript(Script1 siteScript) {
    
    this.siteScript = siteScript;
    return this;
  }

   /**
   * Get siteScript
   * @return siteScript
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SITE_SCRIPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Script1 getSiteScript() {
    return siteScript;
  }


  @JsonProperty(JSON_PROPERTY_SITE_SCRIPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSiteScript(Script1 siteScript) {
    this.siteScript = siteScript;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectedSite2 connectedSite2 = (ConnectedSite2) o;
    return Objects.equals(this.siteForeignId, connectedSite2.siteForeignId) &&
        Objects.equals(this.siteScript, connectedSite2.siteScript);
  }

  @Override
  public int hashCode() {
    return Objects.hash(siteForeignId, siteScript);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectedSite2 {\n");
    sb.append("    siteForeignId: ").append(toIndentedString(siteForeignId)).append("\n");
    sb.append("    siteScript: ").append(toIndentedString(siteScript)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

