/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Members to add/remove to/from a static segment
 */
@JsonPropertyOrder({
  MembersToAddRemoveToFromAStaticSegment.JSON_PROPERTY_MEMBERS_TO_ADD,
  MembersToAddRemoveToFromAStaticSegment.JSON_PROPERTY_MEMBERS_TO_REMOVE
})
@JsonTypeName("Members_to_add_remove_to_from_a_static_segment")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class MembersToAddRemoveToFromAStaticSegment {
  public static final String JSON_PROPERTY_MEMBERS_TO_ADD = "members_to_add";
  private List<String> membersToAdd = new ArrayList<>();

  public static final String JSON_PROPERTY_MEMBERS_TO_REMOVE = "members_to_remove";
  private List<String> membersToRemove = new ArrayList<>();

  public MembersToAddRemoveToFromAStaticSegment() {
  }

  public MembersToAddRemoveToFromAStaticSegment membersToAdd(List<String> membersToAdd) {
    
    this.membersToAdd = membersToAdd;
    return this;
  }

  public MembersToAddRemoveToFromAStaticSegment addMembersToAddItem(String membersToAddItem) {
    if (this.membersToAdd == null) {
      this.membersToAdd = new ArrayList<>();
    }
    this.membersToAdd.add(membersToAddItem);
    return this;
  }

   /**
   * An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored. A maximum of 500 members can be sent.
   * @return membersToAdd
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMBERS_TO_ADD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getMembersToAdd() {
    return membersToAdd;
  }


  @JsonProperty(JSON_PROPERTY_MEMBERS_TO_ADD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMembersToAdd(List<String> membersToAdd) {
    this.membersToAdd = membersToAdd;
  }


  public MembersToAddRemoveToFromAStaticSegment membersToRemove(List<String> membersToRemove) {
    
    this.membersToRemove = membersToRemove;
    return this;
  }

  public MembersToAddRemoveToFromAStaticSegment addMembersToRemoveItem(String membersToRemoveItem) {
    if (this.membersToRemove == null) {
      this.membersToRemove = new ArrayList<>();
    }
    this.membersToRemove.add(membersToRemoveItem);
    return this;
  }

   /**
   * An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored. A maximum of 500 members can be sent.
   * @return membersToRemove
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMBERS_TO_REMOVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getMembersToRemove() {
    return membersToRemove;
  }


  @JsonProperty(JSON_PROPERTY_MEMBERS_TO_REMOVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMembersToRemove(List<String> membersToRemove) {
    this.membersToRemove = membersToRemove;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MembersToAddRemoveToFromAStaticSegment membersToAddRemoveToFromAStaticSegment = (MembersToAddRemoveToFromAStaticSegment) o;
    return Objects.equals(this.membersToAdd, membersToAddRemoveToFromAStaticSegment.membersToAdd) &&
        Objects.equals(this.membersToRemove, membersToAddRemoveToFromAStaticSegment.membersToRemove);
  }

  @Override
  public int hashCode() {
    return Objects.hash(membersToAdd, membersToRemove);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MembersToAddRemoveToFromAStaticSegment {\n");
    sb.append("    membersToAdd: ").append(toIndentedString(membersToAdd)).append("\n");
    sb.append("    membersToRemove: ").append(toIndentedString(membersToRemove)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

