/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Collection of Content for List Signup Forms.
 */
@JsonPropertyOrder({
  CollectionOfContentForListSignupForms.JSON_PROPERTY_SECTION,
  CollectionOfContentForListSignupForms.JSON_PROPERTY_VALUE
})
@JsonTypeName("Collection_of_Content_for_List_Signup_Forms")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class CollectionOfContentForListSignupForms {
  /**
   * The content section name.
   */
  public enum SectionEnum {
    SIGNUP_MESSAGE("signup_message"),
    
    UNSUB_MESSAGE("unsub_message"),
    
    SIGNUP_THANK_YOU_TITLE("signup_thank_you_title");

    private String value;

    SectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SectionEnum fromValue(String value) {
      for (SectionEnum b : SectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SECTION = "section";
  private SectionEnum section;

  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;

  public CollectionOfContentForListSignupForms() {
  }

  public CollectionOfContentForListSignupForms section(SectionEnum section) {
    
    this.section = section;
    return this;
  }

   /**
   * The content section name.
   * @return section
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SectionEnum getSection() {
    return section;
  }


  @JsonProperty(JSON_PROPERTY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSection(SectionEnum section) {
    this.section = section;
  }


  public CollectionOfContentForListSignupForms value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The content section text.
   * @return value
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(String value) {
    this.value = value;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectionOfContentForListSignupForms collectionOfContentForListSignupForms = (CollectionOfContentForListSignupForms) o;
    return Objects.equals(this.section, collectionOfContentForListSignupForms.section) &&
        Objects.equals(this.value, collectionOfContentForListSignupForms.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(section, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectionOfContentForListSignupForms {\n");
    sb.append("    section: ").append(toIndentedString(section)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

