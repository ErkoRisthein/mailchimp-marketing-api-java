/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The status of a batch request
 */
@JsonPropertyOrder({
  Batch.JSON_PROPERTY_ID,
  Batch.JSON_PROPERTY_STATUS,
  Batch.JSON_PROPERTY_TOTAL_OPERATIONS,
  Batch.JSON_PROPERTY_FINISHED_OPERATIONS,
  Batch.JSON_PROPERTY_ERRORED_OPERATIONS,
  Batch.JSON_PROPERTY_SUBMITTED_AT,
  Batch.JSON_PROPERTY_COMPLETED_AT,
  Batch.JSON_PROPERTY_RESPONSE_BODY_URL,
  Batch.JSON_PROPERTY_LINKS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class Batch {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  /**
   * The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation) about the batch operation status.
   */
  public enum StatusEnum {
    PENDING("pending"),
    
    PREPROCESSING("preprocessing"),
    
    STARTED("started"),
    
    FINALIZING("finalizing"),
    
    FINISHED("finished");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_TOTAL_OPERATIONS = "total_operations";
  private Integer totalOperations;

  public static final String JSON_PROPERTY_FINISHED_OPERATIONS = "finished_operations";
  private Integer finishedOperations;

  public static final String JSON_PROPERTY_ERRORED_OPERATIONS = "errored_operations";
  private Integer erroredOperations;

  public static final String JSON_PROPERTY_SUBMITTED_AT = "submitted_at";
  private OffsetDateTime submittedAt;

  public static final String JSON_PROPERTY_COMPLETED_AT = "completed_at";
  private OffsetDateTime completedAt;

  public static final String JSON_PROPERTY_RESPONSE_BODY_URL = "response_body_url";
  private String responseBodyUrl;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<ResourceLink> links = new ArrayList<>();

  public Batch() {
  }

  @JsonCreator
  public Batch(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_STATUS) StatusEnum status, 
    @JsonProperty(JSON_PROPERTY_TOTAL_OPERATIONS) Integer totalOperations, 
    @JsonProperty(JSON_PROPERTY_FINISHED_OPERATIONS) Integer finishedOperations, 
    @JsonProperty(JSON_PROPERTY_ERRORED_OPERATIONS) Integer erroredOperations, 
    @JsonProperty(JSON_PROPERTY_SUBMITTED_AT) OffsetDateTime submittedAt, 
    @JsonProperty(JSON_PROPERTY_COMPLETED_AT) OffsetDateTime completedAt, 
    @JsonProperty(JSON_PROPERTY_RESPONSE_BODY_URL) String responseBodyUrl, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.status = status;
    this.totalOperations = totalOperations;
    this.finishedOperations = finishedOperations;
    this.erroredOperations = erroredOperations;
    this.submittedAt = submittedAt;
    this.completedAt = completedAt;
    this.responseBodyUrl = responseBodyUrl;
    this.links = links;
  }

   /**
   * A string that uniquely identifies this batch request.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




   /**
   * The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation) about the batch operation status.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }




   /**
   * The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.
   * @return totalOperations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalOperations() {
    return totalOperations;
  }




   /**
   * The number of completed operations. This includes operations that returned an error.
   * @return finishedOperations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINISHED_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFinishedOperations() {
    return finishedOperations;
  }




   /**
   * The number of completed operations that returned an error.
   * @return erroredOperations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERRORED_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getErroredOperations() {
    return erroredOperations;
  }




   /**
   * The date and time when the server received the batch request in ISO 8601 format.
   * @return submittedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMITTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSubmittedAt() {
    return submittedAt;
  }




   /**
   * The date and time when all operations in the batch request completed in ISO 8601 format.
   * @return completedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCompletedAt() {
    return completedAt;
  }




   /**
   * The URL of the gzipped archive of the results of all the operations.
   * @return responseBodyUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_BODY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseBodyUrl() {
    return responseBodyUrl;
  }




   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceLink> getLinks() {
    return links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Batch batch = (Batch) o;
    return Objects.equals(this.id, batch.id) &&
        Objects.equals(this.status, batch.status) &&
        Objects.equals(this.totalOperations, batch.totalOperations) &&
        Objects.equals(this.finishedOperations, batch.finishedOperations) &&
        Objects.equals(this.erroredOperations, batch.erroredOperations) &&
        Objects.equals(this.submittedAt, batch.submittedAt) &&
        Objects.equals(this.completedAt, batch.completedAt) &&
        Objects.equals(this.responseBodyUrl, batch.responseBodyUrl) &&
        Objects.equals(this.links, batch.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, totalOperations, finishedOperations, erroredOperations, submittedAt, completedAt, responseBodyUrl, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Batch {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    totalOperations: ").append(toIndentedString(totalOperations)).append("\n");
    sb.append("    finishedOperations: ").append(toIndentedString(finishedOperations)).append("\n");
    sb.append("    erroredOperations: ").append(toIndentedString(erroredOperations)).append("\n");
    sb.append("    submittedAt: ").append(toIndentedString(submittedAt)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("    responseBodyUrl: ").append(toIndentedString(responseBodyUrl)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

