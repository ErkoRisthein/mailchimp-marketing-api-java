/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The delay settings for an Automation email.
 */
@JsonPropertyOrder({
  AutomationDelay.JSON_PROPERTY_AMOUNT,
  AutomationDelay.JSON_PROPERTY_TYPE,
  AutomationDelay.JSON_PROPERTY_DIRECTION,
  AutomationDelay.JSON_PROPERTY_ACTION,
  AutomationDelay.JSON_PROPERTY_ACTION_DESCRIPTION,
  AutomationDelay.JSON_PROPERTY_FULL_DESCRIPTION
})
@JsonTypeName("Automation_Delay")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class AutomationDelay {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Integer amount;

  /**
   * The type of delay for an Automation email.
   */
  public enum TypeEnum {
    NOW("now"),
    
    DAY("day"),
    
    HOUR("hour"),
    
    WEEK("week");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * Whether the delay settings describe before or after the delay action of an Automation email.
   */
  public enum DirectionEnum {
    BEFORE("before"),
    
    AFTER("after");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DirectionEnum fromValue(String value) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  private DirectionEnum direction;

  /**
   * The action that triggers the delay of an Automation email.
   */
  public enum ActionEnum {
    PREVIOUS_CAMPAIGN_SENT("previous_campaign_sent"),
    
    PREVIOUS_CAMPAIGN_OPENED("previous_campaign_opened"),
    
    PREVIOUS_CAMPAIGN_NOT_OPENED("previous_campaign_not_opened"),
    
    PREVIOUS_CAMPAIGN_CLICKED_ANY("previous_campaign_clicked_any"),
    
    PREVIOUS_CAMPAIGN_NOT_CLICKED_ANY("previous_campaign_not_clicked_any"),
    
    PREVIOUS_CAMPAIGN_SPECIFIC_CLICKED("previous_campaign_specific_clicked"),
    
    ECOMM_BOUGHT_ANY("ecomm_bought_any"),
    
    ECOMM_BOUGHT_PRODUCT("ecomm_bought_product"),
    
    ECOMM_BOUGHT_CATEGORY("ecomm_bought_category"),
    
    ECOMM_NOT_BOUGHT_ANY("ecomm_not_bought_any"),
    
    ECOMM_ABANDONED_CART("ecomm_abandoned_cart"),
    
    CAMPAIGN_SENT("campaign_sent"),
    
    OPENED_EMAIL("opened_email"),
    
    NOT_OPENED_EMAIL("not_opened_email"),
    
    CLICKED_EMAIL("clicked_email"),
    
    NOT_CLICKED_EMAIL("not_clicked_email"),
    
    CAMPAIGN_SPECIFIC_CLICKED("campaign_specific_clicked"),
    
    MANUAL("manual"),
    
    SIGNUP("signup"),
    
    MERGE_CHANGED("merge_changed"),
    
    GROUP_ADD("group_add"),
    
    GROUP_REMOVE("group_remove"),
    
    MANDRILL_SENT("mandrill_sent"),
    
    MANDRILL_OPENED("mandrill_opened"),
    
    MANDRILL_CLICKED("mandrill_clicked"),
    
    MANDRILL_ANY("mandrill_any"),
    
    API("api"),
    
    GOAL("goal"),
    
    ANNUAL("annual"),
    
    BIRTHDAY("birthday"),
    
    DATE("date"),
    
    DATE_ADDED("date_added"),
    
    TAG_ADD("tag_add");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActionEnum fromValue(String value) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTION = "action";
  private ActionEnum action;

  public static final String JSON_PROPERTY_ACTION_DESCRIPTION = "action_description";
  private String actionDescription;

  public static final String JSON_PROPERTY_FULL_DESCRIPTION = "full_description";
  private String fullDescription;

  public AutomationDelay() {
  }

  @JsonCreator
  public AutomationDelay(
    @JsonProperty(JSON_PROPERTY_AMOUNT) Integer amount, 
    @JsonProperty(JSON_PROPERTY_ACTION_DESCRIPTION) String actionDescription, 
    @JsonProperty(JSON_PROPERTY_FULL_DESCRIPTION) String fullDescription
  ) {
    this();
    this.amount = amount;
    this.actionDescription = actionDescription;
    this.fullDescription = fullDescription;
  }

   /**
   * The delay amount for an Automation email.
   * @return amount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAmount() {
    return amount;
  }




  public AutomationDelay type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of delay for an Automation email.
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public AutomationDelay direction(DirectionEnum direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Whether the delay settings describe before or after the delay action of an Automation email.
   * @return direction
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DirectionEnum getDirection() {
    return direction;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }


  public AutomationDelay action(ActionEnum action) {
    
    this.action = action;
    return this;
  }

   /**
   * The action that triggers the delay of an Automation email.
   * @return action
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActionEnum getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAction(ActionEnum action) {
    this.action = action;
  }


   /**
   * The user-friendly description of the action that triggers an Automation email.
   * @return actionDescription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActionDescription() {
    return actionDescription;
  }




   /**
   * The user-friendly description of the delay and trigger action settings for an Automation email.
   * @return fullDescription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFullDescription() {
    return fullDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationDelay automationDelay = (AutomationDelay) o;
    return Objects.equals(this.amount, automationDelay.amount) &&
        Objects.equals(this.type, automationDelay.type) &&
        Objects.equals(this.direction, automationDelay.direction) &&
        Objects.equals(this.action, automationDelay.action) &&
        Objects.equals(this.actionDescription, automationDelay.actionDescription) &&
        Objects.equals(this.fullDescription, automationDelay.fullDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, type, direction, action, actionDescription, fullDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationDelay {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    actionDescription: ").append(toIndentedString(actionDescription)).append("\n");
    sb.append("    fullDescription: ").append(toIndentedString(fullDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

