/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * abandonedCart automation details.
 */
@JsonPropertyOrder({
  AbandonedCartAutomation.JSON_PROPERTY_IS_SUPPORTED,
  AbandonedCartAutomation.JSON_PROPERTY_ID,
  AbandonedCartAutomation.JSON_PROPERTY_STATUS
})
@JsonTypeName("Abandoned_Cart_Automation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class AbandonedCartAutomation {
  public static final String JSON_PROPERTY_IS_SUPPORTED = "is_supported";
  private Boolean isSupported;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  /**
   * Status of the abandonedCart automation.
   */
  public enum StatusEnum {
    SAVE("save"),
    
    SENDING("sending"),
    
    PAUSED("paused");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public AbandonedCartAutomation() {
  }

  @JsonCreator
  public AbandonedCartAutomation(
    @JsonProperty(JSON_PROPERTY_IS_SUPPORTED) Boolean isSupported, 
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_STATUS) StatusEnum status
  ) {
    this();
    this.isSupported = isSupported;
    this.id = id;
    this.status = status;
  }

   /**
   * Whether this store supports the abandonedCart automation.
   * @return isSupported
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_SUPPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSupported() {
    return isSupported;
  }




   /**
   * Unique ID of automation parent campaign.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




   /**
   * Status of the abandonedCart automation.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbandonedCartAutomation abandonedCartAutomation = (AbandonedCartAutomation) o;
    return Objects.equals(this.isSupported, abandonedCartAutomation.isSupported) &&
        Objects.equals(this.id, abandonedCartAutomation.id) &&
        Objects.equals(this.status, abandonedCartAutomation.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isSupported, id, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbandonedCartAutomation {\n");
    sb.append("    isSupported: ").append(toIndentedString(isSupported)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

