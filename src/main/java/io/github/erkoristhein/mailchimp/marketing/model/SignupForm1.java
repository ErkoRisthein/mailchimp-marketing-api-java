/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.CollectionOfContentForListSignupForms;
import io.github.erkoristhein.mailchimp.marketing.model.CollectionOfElementStyleForListSignupForms;
import io.github.erkoristhein.mailchimp.marketing.model.SignupFormHeaderOptions;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * List signup form.
 */
@JsonPropertyOrder({
  SignupForm1.JSON_PROPERTY_HEADER,
  SignupForm1.JSON_PROPERTY_CONTENTS,
  SignupForm1.JSON_PROPERTY_STYLES
})
@JsonTypeName("Signup_Form_1")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T16:39:59.516441+03:00[Europe/Helsinki]", comments = "Generator version: 7.5.0")
public class SignupForm1 {
  public static final String JSON_PROPERTY_HEADER = "header";
  private SignupFormHeaderOptions header;

  public static final String JSON_PROPERTY_CONTENTS = "contents";
  private List<CollectionOfContentForListSignupForms> contents = new ArrayList<>();

  public static final String JSON_PROPERTY_STYLES = "styles";
  private List<CollectionOfElementStyleForListSignupForms> styles = new ArrayList<>();

  public SignupForm1() {
  }

  public SignupForm1 header(SignupFormHeaderOptions header) {
    
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SignupFormHeaderOptions getHeader() {
    return header;
  }


  @JsonProperty(JSON_PROPERTY_HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeader(SignupFormHeaderOptions header) {
    this.header = header;
  }


  public SignupForm1 contents(List<CollectionOfContentForListSignupForms> contents) {
    
    this.contents = contents;
    return this;
  }

  public SignupForm1 addContentsItem(CollectionOfContentForListSignupForms contentsItem) {
    if (this.contents == null) {
      this.contents = new ArrayList<>();
    }
    this.contents.add(contentsItem);
    return this;
  }

   /**
   * The signup form body content.
   * @return contents
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CollectionOfContentForListSignupForms> getContents() {
    return contents;
  }


  @JsonProperty(JSON_PROPERTY_CONTENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContents(List<CollectionOfContentForListSignupForms> contents) {
    this.contents = contents;
  }


  public SignupForm1 styles(List<CollectionOfElementStyleForListSignupForms> styles) {
    
    this.styles = styles;
    return this;
  }

  public SignupForm1 addStylesItem(CollectionOfElementStyleForListSignupForms stylesItem) {
    if (this.styles == null) {
      this.styles = new ArrayList<>();
    }
    this.styles.add(stylesItem);
    return this;
  }

   /**
   * An array of objects, each representing an element style for the signup form.
   * @return styles
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CollectionOfElementStyleForListSignupForms> getStyles() {
    return styles;
  }


  @JsonProperty(JSON_PROPERTY_STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyles(List<CollectionOfElementStyleForListSignupForms> styles) {
    this.styles = styles;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignupForm1 signupForm1 = (SignupForm1) o;
    return Objects.equals(this.header, signupForm1.header) &&
        Objects.equals(this.contents, signupForm1.contents) &&
        Objects.equals(this.styles, signupForm1.styles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, contents, styles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignupForm1 {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    styles: ").append(toIndentedString(styles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

