/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Stats for Group A.
 */
@JsonPropertyOrder({
  GroupA.JSON_PROPERTY_TOTAL_CLICKS_A,
  GroupA.JSON_PROPERTY_CLICK_PERCENTAGE_A,
  GroupA.JSON_PROPERTY_UNIQUE_CLICKS_A,
  GroupA.JSON_PROPERTY_UNIQUE_CLICK_PERCENTAGE_A
})
@JsonTypeName("Group_A")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-03T13:08:30.305646+02:00[Europe/Tallinn]")
public class GroupA {
  public static final String JSON_PROPERTY_TOTAL_CLICKS_A = "total_clicks_a";
  private Integer totalClicksA;

  public static final String JSON_PROPERTY_CLICK_PERCENTAGE_A = "click_percentage_a";
  private BigDecimal clickPercentageA;

  public static final String JSON_PROPERTY_UNIQUE_CLICKS_A = "unique_clicks_a";
  private Integer uniqueClicksA;

  public static final String JSON_PROPERTY_UNIQUE_CLICK_PERCENTAGE_A = "unique_click_percentage_a";
  private BigDecimal uniqueClickPercentageA;

  public GroupA() {
  }

  @JsonCreator
  public GroupA(
    @JsonProperty(JSON_PROPERTY_TOTAL_CLICKS_A) Integer totalClicksA, 
    @JsonProperty(JSON_PROPERTY_CLICK_PERCENTAGE_A) BigDecimal clickPercentageA, 
    @JsonProperty(JSON_PROPERTY_UNIQUE_CLICKS_A) Integer uniqueClicksA, 
    @JsonProperty(JSON_PROPERTY_UNIQUE_CLICK_PERCENTAGE_A) BigDecimal uniqueClickPercentageA
  ) {
    this();
    this.totalClicksA = totalClicksA;
    this.clickPercentageA = clickPercentageA;
    this.uniqueClicksA = uniqueClicksA;
    this.uniqueClickPercentageA = uniqueClickPercentageA;
  }

   /**
   * The total number of clicks for Group A.
   * @return totalClicksA
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_CLICKS_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalClicksA() {
    return totalClicksA;
  }




   /**
   * The percentage of total clicks for Group A.
   * @return clickPercentageA
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICK_PERCENTAGE_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getClickPercentageA() {
    return clickPercentageA;
  }




   /**
   * The number of unique clicks for Group A.
   * @return uniqueClicksA
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_CLICKS_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUniqueClicksA() {
    return uniqueClicksA;
  }




   /**
   * The percentage of unique clicks for Group A.
   * @return uniqueClickPercentageA
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_CLICK_PERCENTAGE_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUniqueClickPercentageA() {
    return uniqueClickPercentageA;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupA groupA = (GroupA) o;
    return Objects.equals(this.totalClicksA, groupA.totalClicksA) &&
        Objects.equals(this.clickPercentageA, groupA.clickPercentageA) &&
        Objects.equals(this.uniqueClicksA, groupA.uniqueClicksA) &&
        Objects.equals(this.uniqueClickPercentageA, groupA.uniqueClickPercentageA);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalClicksA, clickPercentageA, uniqueClicksA, uniqueClickPercentageA);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupA {\n");
    sb.append("    totalClicksA: ").append(toIndentedString(totalClicksA)).append("\n");
    sb.append("    clickPercentageA: ").append(toIndentedString(clickPercentageA)).append("\n");
    sb.append("    uniqueClicksA: ").append(toIndentedString(uniqueClicksA)).append("\n");
    sb.append("    uniqueClickPercentageA: ").append(toIndentedString(uniqueClickPercentageA)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

