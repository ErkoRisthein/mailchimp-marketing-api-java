/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.ContactCounts;
import io.github.erkoristhein.mailchimp.marketing.model.MergeField3;
import io.github.erkoristhein.mailchimp.marketing.model.OptionsInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SurveyQuestionReport
 */
class SurveyQuestionReportTest {
    private final SurveyQuestionReport model = new SurveyQuestionReport();

    /**
     * Model tests for SurveyQuestionReport
     */
    @Test
    void testSurveyQuestionReport() {
        // TODO: test SurveyQuestionReport
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'surveyId'
     */
    @Test
    void surveyIdTest() {
        // TODO: test surveyId
    }

    /**
     * Test the property 'query'
     */
    @Test
    void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'type'
     */
    @Test
    void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'totalResponses'
     */
    @Test
    void totalResponsesTest() {
        // TODO: test totalResponses
    }

    /**
     * Test the property 'isRequired'
     */
    @Test
    void isRequiredTest() {
        // TODO: test isRequired
    }

    /**
     * Test the property 'hasOther'
     */
    @Test
    void hasOtherTest() {
        // TODO: test hasOther
    }

    /**
     * Test the property 'otherLabel'
     */
    @Test
    void otherLabelTest() {
        // TODO: test otherLabel
    }

    /**
     * Test the property 'averageRating'
     */
    @Test
    void averageRatingTest() {
        // TODO: test averageRating
    }

    /**
     * Test the property 'rangeLowLabel'
     */
    @Test
    void rangeLowLabelTest() {
        // TODO: test rangeLowLabel
    }

    /**
     * Test the property 'rangeHighLabel'
     */
    @Test
    void rangeHighLabelTest() {
        // TODO: test rangeHighLabel
    }

    /**
     * Test the property 'placeholderLabel'
     */
    @Test
    void placeholderLabelTest() {
        // TODO: test placeholderLabel
    }

    /**
     * Test the property 'subscribeCheckboxEnabled'
     */
    @Test
    void subscribeCheckboxEnabledTest() {
        // TODO: test subscribeCheckboxEnabled
    }

    /**
     * Test the property 'subscribeCheckboxLabel'
     */
    @Test
    void subscribeCheckboxLabelTest() {
        // TODO: test subscribeCheckboxLabel
    }

    /**
     * Test the property 'mergeField'
     */
    @Test
    void mergeFieldTest() {
        // TODO: test mergeField
    }

    /**
     * Test the property 'options'
     */
    @Test
    void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'contactCounts'
     */
    @Test
    void contactCountsTest() {
        // TODO: test contactCounts
    }

}
