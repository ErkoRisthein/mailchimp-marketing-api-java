/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.Address1;
import io.github.erkoristhein.mailchimp.marketing.model.Automations;
import io.github.erkoristhein.mailchimp.marketing.model.ConnectedSite2;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ECommerceStore
 */
class ECommerceStoreTest {
    private final ECommerceStore model = new ECommerceStore();

    /**
     * Model tests for ECommerceStore
     */
    @Test
    void testECommerceStore() {
        // TODO: test ECommerceStore
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'listId'
     */
    @Test
    void listIdTest() {
        // TODO: test listId
    }

    /**
     * Test the property 'name'
     */
    @Test
    void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'platform'
     */
    @Test
    void platformTest() {
        // TODO: test platform
    }

    /**
     * Test the property 'domain'
     */
    @Test
    void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'isSyncing'
     */
    @Test
    void isSyncingTest() {
        // TODO: test isSyncing
    }

    /**
     * Test the property 'emailAddress'
     */
    @Test
    void emailAddressTest() {
        // TODO: test emailAddress
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'moneyFormat'
     */
    @Test
    void moneyFormatTest() {
        // TODO: test moneyFormat
    }

    /**
     * Test the property 'primaryLocale'
     */
    @Test
    void primaryLocaleTest() {
        // TODO: test primaryLocale
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'phone'
     */
    @Test
    void phoneTest() {
        // TODO: test phone
    }

    /**
     * Test the property 'address'
     */
    @Test
    void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'connectedSite'
     */
    @Test
    void connectedSiteTest() {
        // TODO: test connectedSite
    }

    /**
     * Test the property 'automations'
     */
    @Test
    void automationsTest() {
        // TODO: test automations
    }

    /**
     * Test the property 'listIsActive'
     */
    @Test
    void listIsActiveTest() {
        // TODO: test listIsActive
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'links'
     */
    @Test
    void linksTest() {
        // TODO: test links
    }

}
