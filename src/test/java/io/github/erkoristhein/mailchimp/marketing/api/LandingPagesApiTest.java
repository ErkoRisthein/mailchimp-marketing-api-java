/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.api;

import io.github.erkoristhein.mailchimp.marketing.model.GetAllLandingPages200Response;
import io.github.erkoristhein.mailchimp.marketing.model.LandingPage;
import io.github.erkoristhein.mailchimp.marketing.model.LandingPage1;
import io.github.erkoristhein.mailchimp.marketing.model.LandingPage2;
import io.github.erkoristhein.mailchimp.marketing.model.LandingPageContent;
import io.github.erkoristhein.mailchimp.marketing.model.ProblemDetailDocument;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LandingPagesApi
 */
@Ignore
public class LandingPagesApiTest {

    private final LandingPagesApi api = new LandingPagesApi();

    
    /**
     * Delete landing page
     *
     * Delete a landing page.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLandingPageIdTest() {
        String pageId = null;

        api.deleteLandingPageId(pageId);

        // TODO: test validations
    }
    
    /**
     * List landing pages
     *
     * Get all landing pages.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllLandingPagesTest() {
        String sortDir = null;
        String sortField = null;
        List<String> fields = null;
        List<String> excludeFields = null;
        Integer count = null;

        GetAllLandingPages200Response response = api.getAllLandingPages(sortDir, sortField, fields, excludeFields, count);

        // TODO: test validations
    }
    
    /**
     * Get landing page info
     *
     * Get information about a specific page.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLandingPageIdTest() {
        String pageId = null;
        List<String> fields = null;
        List<String> excludeFields = null;

        LandingPage response = api.getLandingPageId(pageId, fields, excludeFields);

        // TODO: test validations
    }
    
    /**
     * Get landing page content
     *
     * Get the the HTML for your landing page.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLandingPageIdContentTest() {
        String pageId = null;
        List<String> fields = null;
        List<String> excludeFields = null;

        LandingPageContent response = api.getLandingPageIdContent(pageId, fields, excludeFields);

        // TODO: test validations
    }
    
    /**
     * Update landing page
     *
     * Update a landing page.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchLandingPageIdTest() {
        String pageId = null;
        LandingPage2 body = null;

        LandingPage response = api.patchLandingPageId(pageId, body);

        // TODO: test validations
    }
    
    /**
     * Add landing page
     *
     * Create a new Mailchimp landing page.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postAllLandingPagesTest() {
        LandingPage1 body = null;
        Boolean useDefaultList = null;

        LandingPage response = api.postAllLandingPages(body, useDefaultList);

        // TODO: test validations
    }
    
    /**
     * Publish landing page
     *
     * Publish a landing page that is in draft, unpublished, or has been previously published and edited.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postLandingPageIdActionsPublishTest() {
        String pageId = null;

        api.postLandingPageIdActionsPublish(pageId);

        // TODO: test validations
    }
    
    /**
     * Unpublish landing page
     *
     * Unpublish a landing page that is in draft or has been published.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postLandingPageIdActionsUnpublishTest() {
        String pageId = null;

        api.postLandingPageIdActionsUnpublish(pageId);

        // TODO: test validations
    }
    
}
