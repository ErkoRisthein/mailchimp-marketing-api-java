/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryAverageOrderAmount;
import io.github.erkoristhein.mailchimp.marketing.model.GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryEcommerce;
import io.github.erkoristhein.mailchimp.marketing.model.GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryExtendedAt;
import java.math.BigDecimal;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummary
 */
class GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummaryTest {
    private final GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummary model = new GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummary();

    /**
     * Model tests for GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummary
     */
    @Test
    void testGetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummary() {
        // TODO: test GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummary
    }

    /**
     * Test the property 'reach'
     */
    @Test
    void reachTest() {
        // TODO: test reach
    }

    /**
     * Test the property 'impressions'
     */
    @Test
    void impressionsTest() {
        // TODO: test impressions
    }

    /**
     * Test the property 'clicks'
     */
    @Test
    void clicksTest() {
        // TODO: test clicks
    }

    /**
     * Test the property 'clickRate'
     */
    @Test
    void clickRateTest() {
        // TODO: test clickRate
    }

    /**
     * Test the property 'uniqueClicks'
     */
    @Test
    void uniqueClicksTest() {
        // TODO: test uniqueClicks
    }

    /**
     * Test the property 'firstTimeBuyers'
     */
    @Test
    void firstTimeBuyersTest() {
        // TODO: test firstTimeBuyers
    }

    /**
     * Test the property 'ecommerce'
     */
    @Test
    void ecommerceTest() {
        // TODO: test ecommerce
    }

    /**
     * Test the property 'totalProductsSold'
     */
    @Test
    void totalProductsSoldTest() {
        // TODO: test totalProductsSold
    }

    /**
     * Test the property 'totalOrders'
     */
    @Test
    void totalOrdersTest() {
        // TODO: test totalOrders
    }

    /**
     * Test the property 'averageOrderAmount'
     */
    @Test
    void averageOrderAmountTest() {
        // TODO: test averageOrderAmount
    }

    /**
     * Test the property 'costPerClick'
     */
    @Test
    void costPerClickTest() {
        // TODO: test costPerClick
    }

    /**
     * Test the property 'averageDailyBudget'
     */
    @Test
    void averageDailyBudgetTest() {
        // TODO: test averageDailyBudget
    }

    /**
     * Test the property 'likes'
     */
    @Test
    void likesTest() {
        // TODO: test likes
    }

    /**
     * Test the property 'comments'
     */
    @Test
    void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'shares'
     */
    @Test
    void sharesTest() {
        // TODO: test shares
    }

    /**
     * Test the property 'hasExtendedAdDuration'
     */
    @Test
    void hasExtendedAdDurationTest() {
        // TODO: test hasExtendedAdDuration
    }

    /**
     * Test the property 'extendedAt'
     */
    @Test
    void extendedAtTest() {
        // TODO: test extendedAt
    }

    /**
     * Test the property 'returnOnInvestment'
     */
    @Test
    void returnOnInvestmentTest() {
        // TODO: test returnOnInvestment
    }

}
