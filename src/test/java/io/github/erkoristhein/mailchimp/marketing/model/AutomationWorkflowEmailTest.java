/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.marketing.model.AutomationDelay;
import io.github.erkoristhein.mailchimp.marketing.model.AutomationTrigger;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignReportSummary1;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignSettings;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignSocialCard;
import io.github.erkoristhein.mailchimp.marketing.model.CampaignTrackingOptions;
import io.github.erkoristhein.mailchimp.marketing.model.List2;
import io.github.erkoristhein.mailchimp.marketing.model.ResourceLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AutomationWorkflowEmail
 */
class AutomationWorkflowEmailTest {
    private final AutomationWorkflowEmail model = new AutomationWorkflowEmail();

    /**
     * Model tests for AutomationWorkflowEmail
     */
    @Test
    void testAutomationWorkflowEmail() {
        // TODO: test AutomationWorkflowEmail
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'webId'
     */
    @Test
    void webIdTest() {
        // TODO: test webId
    }

    /**
     * Test the property 'workflowId'
     */
    @Test
    void workflowIdTest() {
        // TODO: test workflowId
    }

    /**
     * Test the property 'position'
     */
    @Test
    void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'delay'
     */
    @Test
    void delayTest() {
        // TODO: test delay
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'archiveUrl'
     */
    @Test
    void archiveUrlTest() {
        // TODO: test archiveUrl
    }

    /**
     * Test the property 'status'
     */
    @Test
    void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'emailsSent'
     */
    @Test
    void emailsSentTest() {
        // TODO: test emailsSent
    }

    /**
     * Test the property 'sendTime'
     */
    @Test
    void sendTimeTest() {
        // TODO: test sendTime
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'needsBlockRefresh'
     */
    @Test
    void needsBlockRefreshTest() {
        // TODO: test needsBlockRefresh
    }

    /**
     * Test the property 'hasLogoMergeTag'
     */
    @Test
    void hasLogoMergeTagTest() {
        // TODO: test hasLogoMergeTag
    }

    /**
     * Test the property 'recipients'
     */
    @Test
    void recipientsTest() {
        // TODO: test recipients
    }

    /**
     * Test the property 'settings'
     */
    @Test
    void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property 'tracking'
     */
    @Test
    void trackingTest() {
        // TODO: test tracking
    }

    /**
     * Test the property 'socialCard'
     */
    @Test
    void socialCardTest() {
        // TODO: test socialCard
    }

    /**
     * Test the property 'triggerSettings'
     */
    @Test
    void triggerSettingsTest() {
        // TODO: test triggerSettings
    }

    /**
     * Test the property 'reportSummary'
     */
    @Test
    void reportSummaryTest() {
        // TODO: test reportSummary
    }

    /**
     * Test the property 'links'
     */
    @Test
    void linksTest() {
        // TODO: test links
    }

}
