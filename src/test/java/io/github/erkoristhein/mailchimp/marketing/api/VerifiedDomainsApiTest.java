/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.81
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.api;

import io.github.erkoristhein.mailchimp.marketing.model.ProblemDetailDocument;
import io.github.erkoristhein.mailchimp.marketing.model.VerifiedDomains;
import io.github.erkoristhein.mailchimp.marketing.model.VerifiedDomains1;
import io.github.erkoristhein.mailchimp.marketing.model.VerifiedDomains2;
import io.github.erkoristhein.mailchimp.marketing.model.VerifyADomainForSending;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerifiedDomainsApi
 */
@Ignore
public class VerifiedDomainsApiTest {

    private final VerifiedDomainsApi api = new VerifiedDomainsApi();

    
    /**
     * Add domain to account
     *
     * Add a domain to the account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createVerifiedDomainTest() {
        VerifiedDomains2 body = null;

        VerifiedDomains response = api.createVerifiedDomain(body);

        // TODO: test validations
    }
    
    /**
     * Delete domain
     *
     * Delete a verified domain from the account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVerifiedDomainTest() {
        String domainName = null;

        api.deleteVerifiedDomain(domainName);

        // TODO: test validations
    }
    
    /**
     * Get domain info
     *
     * Get the details for a single domain on the account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVerifiedDomainTest() {
        String domainName = null;

        VerifiedDomains response = api.getVerifiedDomain(domainName);

        // TODO: test validations
    }
    
    /**
     * List sending domains
     *
     * Get all of the sending domains on the account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVerifiedDomainsTest() {

        VerifiedDomains1 response = api.getVerifiedDomains();

        // TODO: test validations
    }
    
    /**
     * Verify domain
     *
     * Verify a domain for sending.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void verifyDomainTest() {
        String domainName = null;
        VerifyADomainForSending body = null;

        VerifiedDomains response = api.verifyDomain(domainName, body);

        // TODO: test validations
    }
    
}
