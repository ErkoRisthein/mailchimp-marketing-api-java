/*
 * Mailchimp Marketing API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.marketing.api;

import io.github.erkoristhein.mailchimp.marketing.model.ProblemDetailDocument;
import io.github.erkoristhein.mailchimp.marketing.model.TemplateDefaultContent;
import io.github.erkoristhein.mailchimp.marketing.model.TemplateInstance;
import io.github.erkoristhein.mailchimp.marketing.model.TemplateInstance1;
import io.github.erkoristhein.mailchimp.marketing.model.Templates;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.springframework.web.client.RestClientException;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplatesApi
 */
@Disabled
class TemplatesApiTest {

    private final TemplatesApi api = new TemplatesApi();

    
    /**
     * Delete template
     *
     * Delete a specific template.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void deleteTemplatesIdTest() {
        String templateId = null;

        api.deleteTemplatesId(templateId);

        // TODO: test validations
    }
    
    /**
     * List templates
     *
     * Get a list of an account&#39;s available templates.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void getTemplatesTest() {
        List<String> fields = null;
        List<String> excludeFields = null;
        Integer count = null;
        Integer offset = null;
        String createdBy = null;
        String sinceDateCreated = null;
        String beforeDateCreated = null;
        String type = null;
        String category = null;
        String folderId = null;
        String sortField = null;
        String contentType = null;
        String sortDir = null;

        Templates response = api.getTemplates(fields, excludeFields, count, offset, createdBy, sinceDateCreated, beforeDateCreated, type, category, folderId, sortField, contentType, sortDir);

        // TODO: test validations
    }
    
    /**
     * Get template info
     *
     * Get information about a specific template.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void getTemplatesIdTest() {
        String templateId = null;
        List<String> fields = null;
        List<String> excludeFields = null;

        TemplateInstance response = api.getTemplatesId(templateId, fields, excludeFields);

        // TODO: test validations
    }
    
    /**
     * View default content
     *
     * Get the sections that you can edit in a template, including each section&#39;s default content.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void getTemplatesIdDefaultContentTest() {
        String templateId = null;
        List<String> fields = null;
        List<String> excludeFields = null;

        TemplateDefaultContent response = api.getTemplatesIdDefaultContent(templateId, fields, excludeFields);

        // TODO: test validations
    }
    
    /**
     * Update template
     *
     * Update the name, HTML, or &#x60;folder_id&#x60; of an existing template.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void patchTemplatesIdTest() {
        String templateId = null;
        TemplateInstance1 body = null;

        TemplateInstance response = api.patchTemplatesId(templateId, body);

        // TODO: test validations
    }
    
    /**
     * Add template
     *
     * Create a new template for the account. Only Classic templates are supported.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void postTemplatesTest() {
        TemplateInstance1 body = null;

        TemplateInstance response = api.postTemplates(body);

        // TODO: test validations
    }
    
}
